{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/shaila/mealApp/meal-app/src/MealMap.js\";\n\n/*global google*/\nimport React from \"react\";\nimport { compose, withProps, withHandlers, withState, withStateHandlers, lifecycle } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer } from \"react-google-maps\";\nvar MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places,geometry\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"50%\",\n      height: 382,\n      WebkitFilter: \"drop-shadow(0px 0px 5px #666)\",\n      marginLeft: 491,\n      marginTop: -411.9\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap, lifecycle({\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    var DirectionsService = new google.maps.DirectionsService();\n    DirectionsService.route({\n      origin: new google.maps.LatLng(47.6769683, -122.0284808),\n      destination: new google.maps.LatLng(49.2827, -123.1207),\n      travelMode: google.maps.TravelMode.DRIVING\n    }, function (result, status) {\n      if (status === google.maps.DirectionsStatus.OK) {\n        console.log(result);\n\n        _this.setState({\n          directions: _objectSpread({}, result),\n          markers: true\n        });\n      } else {\n        console.error(\"error fetching directions \".concat(result));\n      }\n    });\n  }\n}), withState('places', 'updatePlaces', '', 'searchCriteria', 'radius', 'currLat', 'currLng'), withStateHandlers(function () {\n  return {\n    isOpen: false,\n    markerIndex: 0,\n    currentLatLng: {\n      lat: 47.6769683,\n      lng: -90.6769683\n    }\n  };\n}, {\n  onToggleOpen: function onToggleOpen(_ref) {\n    var isOpen = _ref.isOpen;\n    return function (index) {\n      return {\n        isOpen: !isOpen,\n        markerIndex: index\n      };\n    };\n  }\n}), withHandlers(function () {\n  var refs = {\n    map: undefined,\n    array: []\n  };\n  return {\n    onMapMounted: function onMapMounted() {\n      return function (ref) {\n        refs.map = ref;\n      };\n    },\n    fetchPlaces: function () {\n      var _fetchPlaces = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref2) {\n        var updatePlaces, searchCriteria, radius, price, review, defaultCenter, bounds, maxPrice, searchRating, service, x, output, request;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                updatePlaces = _ref2.updatePlaces, searchCriteria = _ref2.searchCriteria, radius = _ref2.radius, price = _ref2.price, review = _ref2.review, defaultCenter = _ref2.defaultCenter;\n                bounds = refs.map.getBounds();\n                refs.array = searchCriteria;\n                console.log(refs.array.length); //var typeSearchCriteria=searchCriteria;\n\n                maxPrice = price;\n                searchRating = review;\n                service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n                output = [];\n                x = 0;\n\n              case 9:\n                if (!(x < refs.array.length)) {\n                  _context.next = 18;\n                  break;\n                }\n\n                console.log(refs.array[x]);\n                request = {\n                  location: defaultCenter,\n                  //location:(new google.maps.LatLng(47.6769683,-122.0284808)),or {lat:47.6769683,lng:-122.0284808}\n                  bounds: bounds,\n                  radius: radius,\n                  type: refs.array[x],\n                  openNow: true,\n                  maxPriceLevel: maxPrice,\n                  fields: ['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n                };\n                _context.next = 14;\n                return service.nearbySearch(request, function (results, status) {\n                  return new Promise(function (reject, resolve) {\n                    if (status === google.maps.places.PlacesServiceStatus.OK) {\n                      var x;\n\n                      for (x = 0; x < results.length; x++) {\n                        output.push(results[x]);\n                      }\n\n                      resolve(output);\n                      updatePlaces(output);\n                    } else {\n                      reject();\n                    }\n                  });\n                });\n\n              case 14:\n                console.log(output);\n\n              case 15:\n                x++;\n                _context.next = 9;\n                break;\n\n              case 18:\n                //end of forloop \n                updatePlaces(output);\n                console.log(output);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function fetchPlaces(_x) {\n        return _fetchPlaces.apply(this, arguments);\n      };\n    }(),\n    currentLoc: function currentLoc(_ref3) {\n      var currLat = _ref3.currLat,\n          currLng = _ref3.currLng;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          currLat = position.coords.latitude;\n          currLng = position.coords.longitude;\n        });\n        console.log();\n      }\n    }\n  };\n}))(function (props) {\n  //console.log(\"Radius \"+ props.radius)\n  if (props.places != null) console.log(\"helloo\" + props.places);\n  var target = new google.maps.LatLng(47.6769683, -122.0284808);\n\n  if (props.defaultCenter !== undefined) {\n    target = props.defaultCenter;\n  }\n\n  var option = []; //new array to store results based on search criteria\n\n  if (props.places) {\n    console.log(\"OUTPUT!!! \");\n    console.log(props.places);\n    props.places.map(function (place, i) {\n      console.log({\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      });\n\n      if (google.maps.geometry.spherical.computeDistanceBetween(target, new google.maps.LatLng(place.geometry.location.lat(), place.geometry.location.lng())) < props.radius) {\n        option.push(place);\n      }\n\n      if (place.price_level <= props.price) {\n        option.push(place);\n      }\n      /*\n      cant have any markers appear if user enters only type, we need more information along with type. \n      */\n      // if(place.types.length !== 0 && place.types.includes(props.searchCriteria)){ \n      //     console.log(\"here \"+props.searchCriteria)\n      //     option.push(place)\n      // }\n\n    });\n  }\n\n  console.log(option); // if(navigator.geolocation){\n  //     navigator.geolocation.getCurrentPosition(\n  //         position=>{\n  //                 props.currentLatLng.lat=position.coords.latitude\n  //                 props.currentLatLng.lng=position.coords.longitude\n  //             })\n  //         }\n  //console.log(props.currLat);\n\n  var pathCoordinates = [{\n    lat: 47.6769683,\n    lng: -122.0284808\n  }, {\n    lat: 49.2827,\n    lng: -123.1207\n  }];\n  return React.createElement(GoogleMap, {\n    onTilesLoaded: props.fetchPlaces,\n    ref: props.onMapMounted,\n    onClick: props.fetchPlaces,\n    defaultZoom: 13,\n    defaultCenter: {\n      lat: 47.6769683,\n      lng: -122.0284808\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, option && option.map(function (place, i) {\n    return React.createElement(Marker, {\n      key: i,\n      position: {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      },\n      onClick: function onClick() {\n        props.onToggleOpen(i);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, props.isOpen && props.markerIndex === i && React.createElement(InfoWindow, {\n      onCloseClick: props.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, place.name)));\n  }), props.directions && React.createElement(DirectionsRenderer, {\n    directions: props.directions,\n    suppressMarkers: props.markers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }));\n});\n\nvar MealMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MealMap, _React$Component);\n\n  function MealMap() {\n    _classCallCheck(this, MealMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MealMap).apply(this, arguments));\n  }\n\n  _createClass(MealMap, [{\n    key: \"render\",\n    value: function render() {\n      var searchCriteria = this.props.search;\n      var radius = this.props.radius;\n      var price = this.props.price;\n      var ratings = this.props.reviews;\n      var types = [];\n\n      if (searchCriteria.length !== 0 || radius !== 0 || price !== 0) {\n        console.log(searchCriteria + \" \" + radius + \" \" + price + \" \" + ratings);\n        searchCriteria.map(function (select) {\n          types.push(select.label);\n        });\n        return React.createElement(MyMapComponent, {\n          searchCriteria: types,\n          price: price * 1,\n          review: ratings,\n          radius: radius * 1609 //converting into meters\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        });\n      }\n\n      return (//to prevent from crashing\n        React.createElement(MyMapComponent, {\n          searchCriteria: \"\",\n          price: \"any\",\n          review: \"any\",\n          radius: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        })\n      );\n    }\n  }]);\n\n  return MealMap;\n}(React.Component);\n\nexport { MealMap as default };","map":{"version":3,"sources":["/Users/shaila/mealApp/meal-app/src/MealMap.js"],"names":["React","compose","withProps","withHandlers","withState","withStateHandlers","lifecycle","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","DirectionsRenderer","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","position","width","WebkitFilter","marginLeft","marginTop","componentDidMount","DirectionsService","google","maps","route","origin","LatLng","destination","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","console","log","setState","directions","markers","error","isOpen","markerIndex","currentLatLng","lat","lng","onToggleOpen","index","refs","map","undefined","array","onMapMounted","ref","fetchPlaces","updatePlaces","searchCriteria","radius","price","review","defaultCenter","bounds","getBounds","length","maxPrice","searchRating","service","places","PlacesService","context","__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","output","x","request","location","type","openNow","maxPriceLevel","fields","nearbySearch","results","Promise","reject","resolve","PlacesServiceStatus","push","currentLoc","currLat","currLng","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","props","target","option","place","i","geometry","spherical","computeDistanceBetween","price_level","pathCoordinates","name","MealMap","search","ratings","reviews","types","select","label","Component"],"mappings":"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","sourcesContent":["/*global google*/\nimport React from \"react\"\nimport { compose, withProps, withHandlers, withState,withStateHandlers,lifecycle } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker , InfoWindow,DirectionsRenderer } from \"react-google-maps\"\n\nconst MyMapComponent = compose(\n\n    withProps(\n        {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places,geometry\",\n        loadingElement: <div style={{ height: '100vh' }} />,\n        containerElement: <div style={{height: '100vh' }} />,\n        mapElement: <div style={{ position:\"relative\",\n        width: \"50%\",\n        height: 382,\n        WebkitFilter: \"drop-shadow(0px 0px 5px #666)\",\n        marginLeft:491,\n        marginTop:-411.9 }} />,\n    }),\n    withScriptjs,\n    withGoogleMap,\n    lifecycle({\n        componentDidMount() { \n          const DirectionsService = new google.maps.DirectionsService();\n          DirectionsService.route({\n            origin: new google.maps.LatLng(47.6769683,-122.0284808),\n            destination: new google.maps.LatLng( 49.2827, -123.1207 ),\n            travelMode: google.maps.TravelMode.DRIVING,\n          }, (result, status) => {\n            if (status === google.maps.DirectionsStatus.OK) {\n                console.log(result)\nthis.setState({\n                directions: {...result},\n                markers: true\n              })\n            } else {\n              console.error(`error fetching directions ${result}`);\n            }\n          });\n        }\n      }),\n    withState('places', 'updatePlaces','','searchCriteria','radius','currLat','currLng'),\n    withStateHandlers(()=>({\n        isOpen:false,\n        markerIndex:0,\n        currentLatLng:{\n            lat:47.6769683,lng:-90.6769683\n        }\n    }),{\n        onToggleOpen:({isOpen})=>(index)=>({\n            isOpen:!isOpen,\n            markerIndex:index\n        })\n    },\n    ),\n    withHandlers(() => {\n        const refs = {\n            map: undefined,\n            array:[]\n        }\n        return {\n            onMapMounted: () => ref => {\n                refs.map = ref\n            },\n            fetchPlaces: async ({ updatePlaces, searchCriteria, radius ,price , review ,defaultCenter }) => {\n                const bounds = refs.map.getBounds();\n                refs.array=searchCriteria\n                console.log(refs.array.length)\n                //var typeSearchCriteria=searchCriteria;\n                var maxPrice=price;\n                var searchRating=review;\n                const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n                var x;\n                var output=[];\n\nfor(x=0;x<refs.array.length;x++){\n        console.log(refs.array[x])\nvar request = {\n        location:defaultCenter,//location:(new google.maps.LatLng(47.6769683,-122.0284808)),or {lat:47.6769683,lng:-122.0284808}\n        bounds:bounds,\n        radius: radius,\n        type:refs.array[x],\n        openNow:true,\n        maxPriceLevel:maxPrice,\n        fields:['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n        };\n               \nawait service.nearbySearch(request, (results, status) => {\n                \nreturn new Promise((reject, resolve)=>{\n     if (status === google.maps.places.PlacesServiceStatus.OK) {\n    var x;\n    for(x=0;x<results.length;x++)\n    output.push(results[x]);\n    resolve(output);\n    updatePlaces(output);    \n    }else{\n    reject();\n    }\n})\n                   \n})\n            console.log(output)\n} //end of forloop \n\n        updatePlaces(output);\n        console.log(output);\n},\n            currentLoc: ({currLat,currLng})=>{\n                if(navigator.geolocation){\n                    navigator.geolocation.getCurrentPosition(\n                        position=>{\n                               currLat=position.coords.latitude\n                               currLng=position.coords.longitude\n                            })\n                         console.log()\n                        }\n                     \n            }\n        }\n    }),\n)((props) => {\n  //console.log(\"Radius \"+ props.radius)\n\nif(props.places != null)\nconsole.log(\"helloo\"+props.places)\n\n    var target=new google.maps.LatLng(47.6769683,-122.0284808);\n    if(props.defaultCenter !== undefined){\n        target=props.defaultCenter\n    }\n    var option=[]; //new array to store results based on search criteria\n    if(props.places){\n\n     console.log(\"OUTPUT!!! \")\n     console.log(props.places)\n        props.places.map((place,i)=>\n            {\n            console.log({ lat: place.geometry.location.lat(), lng: place.geometry.location.lng()})\n            \n            \n            if(google.maps.geometry.spherical.computeDistanceBetween(target,new google.maps.LatLng(place.geometry.location.lat(),place.geometry.location.lng()))<props.radius){\n                \n                option.push(place);\n            }\n            if(place.price_level<=props.price){\n                option.push(place)\n\n            }\n            /*\n            cant have any markers appear if user enters only type, we need more information along with type. \n            */\n            // if(place.types.length !== 0 && place.types.includes(props.searchCriteria)){ \n            //     console.log(\"here \"+props.searchCriteria)\n            //     option.push(place)\n\n            // }\n\n\n        }\n        )\n    }\n    \n  \n    console.log(option);\n\n    // if(navigator.geolocation){\n    //     navigator.geolocation.getCurrentPosition(\n    //         position=>{\n    //                 props.currentLatLng.lat=position.coords.latitude\n    //                 props.currentLatLng.lng=position.coords.longitude\n    //             })\n             \n    //         }\n        //console.log(props.currLat);\n\n        const pathCoordinates = [\n            {lat:47.6769683,lng:-122.0284808},\n            { lat: 49.2827, lng: -123.1207 }\n        ];\n    return (\n      \n        <GoogleMap\n            onTilesLoaded={props.fetchPlaces}\n            ref={props.onMapMounted}\n            onClick={props.fetchPlaces}\n            defaultZoom={13}\n                    defaultCenter={{lat:47.6769683,lng:-122.0284808}}\n        >\n            {option && option.map((place, i) =>                \n                <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} \n                onClick ={()=> {props.onToggleOpen(i)}} >\n                {props.isOpen && props.markerIndex=== i &&\n                <InfoWindow onCloseClick={props.onToggleOpen}>\n                    <div>{place.name}</div>\n                </InfoWindow>\n                }\n                </Marker>\n                \n            )}\n                  {/*for creating path with the updated coordinates*/}\n   \n             {props.directions && <DirectionsRenderer directions={props.directions} suppressMarkers={props.markers}/>}\n\n        </GoogleMap>\n     \n    )\n   \n})\n\nexport default class MealMap extends React.Component {\n\n    \n    render() {\n\n        var searchCriteria=this.props.search;\n        var radius=this.props.radius;\n        var price=this.props.price;\n        var ratings=this.props.reviews;\n        var types=[]\n\n        if(searchCriteria.length !== 0 || radius!== 0 || price !==0){\n            console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n    \n\n        searchCriteria.map(select=>{\n            types.push(select.label)\n        })\n\n      return (\n            <MyMapComponent searchCriteria={types}\n                price={price*1}\n                review={ratings}\n                radius={radius*1609} //converting into meters\n            \n            />\n        )\n          }\n       \n        return ( //to prevent from crashing\n            <MyMapComponent searchCriteria='' \n                price=\"any\"\n                review=\"any\"\n                radius='0'\n            />\n        )\n     \n       \n    }\n\n}"]},"metadata":{},"sourceType":"module"}