{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shaila/mealApp/meal-app/src/MyFancy.js\";\n\n/*global google*/\nimport React from \"react\";\nimport { compose, withProps, withHandlers, withState } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nvar mapStyle = {\n  position: \"absolute\",\n  width: \"50%\",\n  height: \"50%\",\n  marginLeft: 600,\n  marginTop: -410\n};\nvar MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      width: \"50%\",\n      height: \"90%\",\n      marginLeft: 600,\n      marginTop: -410\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap, withState('places', 'updatePlaces', ''), withHandlers(function () {\n  var refs = {\n    map: undefined\n  };\n  return {\n    onMapMounted: function onMapMounted() {\n      return function (ref) {\n        refs.map = ref;\n      };\n    },\n    fetchPlaces: function fetchPlaces(_ref) {\n      var updatePlaces = _ref.updatePlaces;\n      var places;\n      var bounds = refs.map.getBounds();\n      var service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n      var request = {\n        location: {\n          lat: 47.676844,\n          lng: -122.028342\n        },\n        //bounds:bounds,\n        radius: '1000',\n        type: ['any'],\n        query: ['restaurant'],\n        fields: ['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n      };\n      service.nearbySearch(request, function (results, status) {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          console.log(results);\n          updatePlaces(results);\n        }\n      });\n    }\n  };\n}))(function (props) {\n  return React.createElement(GoogleMap, {\n    onTilesLoaded: props.fetchPlaces,\n    ref: props.onMapMounted,\n    onBoundsChanged: props.fetchPlaces,\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: 47.676844,\n      lng: -122.028342\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.places && props.places.map(function (place, i) {\n    return React.createElement(Marker, {\n      key: i,\n      position: {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  }));\n});\n\nvar MyFancyComponent =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MyFancyComponent, _React$PureComponent);\n\n  function MyFancyComponent() {\n    _classCallCheck(this, MyFancyComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyFancyComponent).apply(this, arguments));\n  }\n\n  _createClass(MyFancyComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MyMapComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MyFancyComponent;\n}(React.PureComponent);\n\nexport { MyFancyComponent as default };","map":{"version":3,"sources":["/Users/shaila/mealApp/meal-app/src/MyFancy.js"],"names":["React","compose","withProps","withHandlers","withState","withScriptjs","withGoogleMap","GoogleMap","Marker","mapStyle","position","width","height","marginLeft","marginTop","MyMapComponent","googleMapURL","loadingElement","containerElement","mapElement","refs","map","undefined","onMapMounted","ref","fetchPlaces","updatePlaces","places","bounds","getBounds","service","google","maps","PlacesService","context","__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","request","location","lat","lng","radius","type","query","fields","nearbySearch","results","status","PlacesServiceStatus","OK","console","log","props","place","i","geometry","MyFancyComponent","PureComponent"],"mappings":"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","sourcesContent":["/*global google*/\nimport React from \"react\"\nimport { compose, withProps, withHandlers, withState } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\nvar mapStyle = {\n    position: \"absolute\",\n    width: \"50%\",\n    height: \"50%\",\n    marginLeft:600,\n    marginTop:-410};\nconst MyMapComponent = compose(\n    withProps(\n        \n        {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places\",\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `100%` }} />,\n        mapElement: <div style={{ position: \"absolute\",\n        width: \"50%\",\n        height: \"90%\",\n        marginLeft:600,\n        marginTop:-410 }} />,\n    }),\n    withScriptjs,\n    withGoogleMap,\n    withState('places', 'updatePlaces', ''),\n    withHandlers(() => {\n        const refs = {\n            map: undefined,\n        }\n\n        return {\n            onMapMounted: () => ref => {\n                refs.map = ref\n            },\n            fetchPlaces: ({ updatePlaces }) => {\n                let places;\n                const bounds = refs.map.getBounds();\n                \n                const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n                const request = {\n                    location:{lat:47.676844,lng:-122.028342},\n                     //bounds:bounds,\n                    radius: '1000',\n                    type: ['any'],\n                    query:['restaurant'],\n                    fields:['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n                };\n                service.nearbySearch(request, (results, status) => {\n                    if (status == google.maps.places.PlacesServiceStatus.OK) {\n                        console.log(results);\n                        updatePlaces(results);\n                    }\n                })\n            }\n        }\n    }),\n)((props) => {\n    return (\n        <GoogleMap\n            onTilesLoaded={props.fetchPlaces}\n            ref={props.onMapMounted}\n            onBoundsChanged={props.fetchPlaces}\n            defaultZoom={15}\n            defaultCenter={{lat:47.676844,lng:-122.028342}}\n        >\n            {props.places && props.places.map((place, i) =>\n                <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} />\n            )}\n        </GoogleMap>\n    )\n})\n\nexport default class MyFancyComponent extends React.PureComponent {\n    render() {\n        return (\n            <MyMapComponent />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}