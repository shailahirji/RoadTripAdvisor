{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shaila/mealApp/meal-app/src/MealMap.js\";\n\n/*global google*/\nimport React from \"react\";\nimport { compose, withProps, withHandlers, withState, withStateHandlers } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nvar MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places,geometry\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"50%\",\n      height: 382,\n      WebkitFilter: \"drop-shadow(0px 0px 5px #666)\",\n      marginLeft: 491,\n      marginTop: -411.9\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap, withState('places', 'updatePlaces', '', 'searchCriteria', 'radius', 'currLat', 'currLng'), withStateHandlers(function () {\n  return {\n    isOpen: false,\n    markerIndex: 0,\n    currentLatLng: {\n      lat: 47.6769683,\n      lng: -90.6769683\n    }\n  };\n}, {\n  onToggleOpen: function onToggleOpen(_ref) {\n    var isOpen = _ref.isOpen;\n    return function (index) {\n      return {\n        isOpen: !isOpen,\n        markerIndex: index\n      };\n    };\n  }\n}), withHandlers(function () {\n  var refs = {\n    map: undefined\n  };\n  return {\n    onMapMounted: function onMapMounted() {\n      return function (ref) {\n        refs.map = ref;\n      };\n    },\n    fetchPlaces: function fetchPlaces(_ref2) {\n      var updatePlaces = _ref2.updatePlaces,\n          searchCriteria = _ref2.searchCriteria,\n          radius = _ref2.radius,\n          price = _ref2.price,\n          review = _ref2.review,\n          defaultCenter = _ref2.defaultCenter;\n      var bounds = refs.map.getBounds(); //var typeSearchCriteria=searchCriteria;\n\n      var maxPrice = price;\n      var searchRating = review;\n      var service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n      var index;\n\n      for (index = 0; index < searchCriteria.length; index++) {\n        console.log(searchCriteria[index]);\n        var request = {\n          location: defaultCenter,\n          //location:(new google.maps.LatLng(47.6769683,-122.0284808)),or {lat:47.6769683,lng:-122.0284808}\n          bounds: bounds,\n          radius: radius,\n          type: searchCriteria[index],\n          openNow: true,\n          maxPriceLevel: maxPrice,\n          fields: ['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n        };\n        service.nearbySearch(request, function (results, status) {\n          if (status == google.maps.places.PlacesServiceStatus.OK) {\n            //console.log(results);\n            console.log(\"Radius inside withhandlers \" + radius);\n            console.log(\"Reviews inside withhandlers \" + review);\n            updatePlaces(results);\n          }\n        });\n      }\n    },\n    currentLoc: function currentLoc(_ref3) {\n      var currLat = _ref3.currLat,\n          currLng = _ref3.currLng;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          currLat = position.coords.latitude;\n          currLng = position.coords.longitude;\n        });\n        console.log();\n      }\n\n      console.log('here');\n    }\n  };\n}))(function (props) {\n  console.log(\"Radius \" + props.radius);\n  var target = new google.maps.LatLng(47.6769683, -122.0284808);\n\n  if (props.defaultCenter !== undefined) {\n    console.log(\"here\");\n    target = props.defaultCenter;\n  }\n\n  var option = []; //new array to store results based on search criteria\n\n  if (props.places) {\n    props.places.map(function (place, i) //console.log({ lat: place.geometry.location.lat(), lng: place.geometry.location.lng()})\n    {\n      if (google.maps.geometry.spherical.computeDistanceBetween(target, new google.maps.LatLng(place.geometry.location.lat(), place.geometry.location.lng())) < props.radius) {\n        option.push(place);\n      }\n\n      console.log(place.price_level);\n\n      if (place.price_level <= props.price) {\n        console.log(\"here \" + props.price);\n        option.push(place);\n      }\n\n      if (place.types.length !== 0 && place.types.includes(props.searchCriteria)) {\n        console.log(\"here \" + props.searchCriteria);\n        option.push(place);\n      }\n    });\n  }\n\n  console.log(option); // if(navigator.geolocation){\n  //     navigator.geolocation.getCurrentPosition(\n  //         position=>{\n  //                 props.currentLatLng.lat=position.coords.latitude\n  //                 props.currentLatLng.lng=position.coords.longitude\n  //             })\n  //         }\n  //console.log(props.currLat);\n\n  return React.createElement(GoogleMap, {\n    onTilesLoaded: props.fetchPlaces,\n    ref: props.onMapMounted,\n    onClick: props.fetchPlaces,\n    defaultZoom: 10,\n    defaultCenter: {\n      lat: 47.6769683,\n      lng: -122.0284808\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, option && option.map(function (place, i) {\n    return React.createElement(Marker, {\n      key: i,\n      position: {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      },\n      onClick: function onClick() {\n        props.onToggleOpen(i);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, props.isOpen && props.markerIndex === i && React.createElement(InfoWindow, {\n      onCloseClick: props.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, place.name)));\n  }));\n});\n\nvar MealMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MealMap, _React$Component);\n\n  function MealMap() {\n    _classCallCheck(this, MealMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MealMap).apply(this, arguments));\n  }\n\n  _createClass(MealMap, [{\n    key: \"render\",\n    value: function render() {\n      var searchCriteria = this.props.search;\n      var radius = this.props.radius;\n      var price = this.props.price;\n      var ratings = this.props.reviews;\n      var type = [];\n      searchCriteria.map(function (select) {\n        type.push(select.label);\n      }); // if(searchCriteria.length !== 0 || radius!== 0 || price !==0){\n      //     console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n      // searchCriteria.map(select=> {\n      //     console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n      //     return(\n      //       searchCriteria=select.label\n      //     )\n      //   })\n      //   return (\n      //     <MyMapComponent searchCriteria={searchCriteria} \n      //         price={price*1}\n      //         review={ratings}\n      //         radius={radius*1609} //converting into meters\n      //     />\n      // )\n      //   }\n      // }else{\n      //     console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n      // return (\n      //     <MyMapComponent searchCriteria='' \n      //         price=\"any\"\n      //         review=\"any\"\n      //         radius='0'\n      //     />\n      // )\n      // }\n\n      return React.createElement(MyMapComponent, {\n        searchCriteria: type,\n        price: price * 1,\n        review: ratings,\n        radius: radius * 1609 //converting into meters\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MealMap;\n}(React.Component);\n\nexport { MealMap as default };","map":{"version":3,"sources":["/Users/shaila/mealApp/meal-app/src/MealMap.js"],"names":["React","compose","withProps","withHandlers","withState","withStateHandlers","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","position","width","WebkitFilter","marginLeft","marginTop","isOpen","markerIndex","currentLatLng","lat","lng","onToggleOpen","index","refs","map","undefined","onMapMounted","ref","fetchPlaces","updatePlaces","searchCriteria","radius","price","review","defaultCenter","bounds","getBounds","maxPrice","searchRating","service","google","maps","places","PlacesService","context","__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","length","console","log","request","location","type","openNow","maxPriceLevel","fields","nearbySearch","results","status","PlacesServiceStatus","OK","currentLoc","currLat","currLng","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","props","target","LatLng","option","place","i","geometry","spherical","computeDistanceBetween","push","price_level","types","includes","name","MealMap","search","ratings","reviews","select","label","Component"],"mappings":"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","sourcesContent":["/*global google*/\nimport React from \"react\"\nimport { compose, withProps, withHandlers, withState,withStateHandlers } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker , InfoWindow } from \"react-google-maps\"\n\nconst MyMapComponent = compose(\n\n    withProps(\n        {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places,geometry\",\n        loadingElement: <div style={{ height: '100vh' }} />,\n        containerElement: <div style={{height: '100vh' }} />,\n        mapElement: <div style={{ position:\"relative\",\n        width: \"50%\",\n        height: 382,\n        WebkitFilter: \"drop-shadow(0px 0px 5px #666)\",\n        marginLeft:491,\n        marginTop:-411.9 }} />,\n    }),\n    withScriptjs,\n    withGoogleMap,\n    withState('places', 'updatePlaces','','searchCriteria','radius','currLat','currLng'),\n    withStateHandlers(()=>({\n        isOpen:false,\n        markerIndex:0,\n        currentLatLng:{\n            lat:47.6769683,lng:-90.6769683\n        }\n    }),{\n        onToggleOpen:({isOpen})=>(index)=>({\n            isOpen:!isOpen,\n            markerIndex:index\n        })\n    },\n    ),\n    withHandlers(() => {\n        const refs = {\n            map: undefined,\n        }\n        return {\n            onMapMounted: () => ref => {\n                refs.map = ref\n            },\n            fetchPlaces: ({ updatePlaces, searchCriteria, radius ,price , review ,defaultCenter }) => {\n                const bounds = refs.map.getBounds();\n                //var typeSearchCriteria=searchCriteria;\n                var maxPrice=price\n                var searchRating=review\n                const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n                \n                var index;\n\n                for(index=0;index<searchCriteria.length;index++){\n                    console.log(searchCriteria[index])\n                const request = {\n                    location:defaultCenter,//location:(new google.maps.LatLng(47.6769683,-122.0284808)),or {lat:47.6769683,lng:-122.0284808}\n                    bounds:bounds,\n                    radius: radius,\n                    type:searchCriteria[index],\n                    openNow:true,\n                    maxPriceLevel:maxPrice,\n                    fields:['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n                };\n               \n                service.nearbySearch(request, (results, status) => {\n                    if (status == google.maps.places.PlacesServiceStatus.OK) {\n                        //console.log(results);\n                        console.log(\"Radius inside withhandlers \"+radius);\n                        console.log(\"Reviews inside withhandlers \"+review);\n                        updatePlaces(results);\n                \n                    }\n                })\n            }},\n            currentLoc: ({currLat,currLng})=>{\n                if(navigator.geolocation){\n                    navigator.geolocation.getCurrentPosition(\n                        position=>{\n                               currLat=position.coords.latitude\n                               currLng=position.coords.longitude\n                            })\n                         console.log()\n                        }\n                        console.log('here')\n            }\n        }\n    }),\n)((props) => {\n  console.log(\"Radius \"+props.radius)\n\n    var target=new google.maps.LatLng(47.6769683,-122.0284808);\n    if(props.defaultCenter !== undefined){\n        console.log(\"here\")\n        target=props.defaultCenter\n    }\n    var option=[]; //new array to store results based on search criteria\n    if(props.places){\n        props.places.map((place,i)=>\n            //console.log({ lat: place.geometry.location.lat(), lng: place.geometry.location.lng()})\n            {if(google.maps.geometry.spherical.computeDistanceBetween(target,new google.maps.LatLng(place.geometry.location.lat(),place.geometry.location.lng()))<props.radius){\n                option.push(place);\n            }\n            console.log(place.price_level)\n            if(place.price_level<=props.price){\n                console.log(\"here \"+props.price)\n                option.push(place)\n\n            }\n\n            if(place.types.length !== 0 && place.types.includes(props.searchCriteria)){\n                console.log(\"here \"+props.searchCriteria)\n                option.push(place)\n\n            }\n\n\n        }\n        )\n    }\n    console.log(option);\n\n    // if(navigator.geolocation){\n    //     navigator.geolocation.getCurrentPosition(\n    //         position=>{\n    //                 props.currentLatLng.lat=position.coords.latitude\n    //                 props.currentLatLng.lng=position.coords.longitude\n    //             })\n             \n    //         }\n        //console.log(props.currLat);\n    return (\n      \n        <GoogleMap\n            onTilesLoaded={props.fetchPlaces}\n            ref={props.onMapMounted}\n            onClick={props.fetchPlaces}\n            defaultZoom={10}\n                    defaultCenter={{lat:47.6769683,lng:-122.0284808}}\n        >\n            {option && option.map((place, i) =>                \n                <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} \n                onClick ={()=> {props.onToggleOpen(i)}} >\n                {props.isOpen && props.markerIndex=== i &&\n                <InfoWindow onCloseClick={props.onToggleOpen}>\n                    <div>{place.name}</div>\n                </InfoWindow>\n                }\n                </Marker>\n                \n            )}\n\n        </GoogleMap>\n     \n    )\n   \n})\n\nexport default class MealMap extends React.Component {\n\n    \n    render() {\n\n        var searchCriteria=this.props.search;\n        var radius=this.props.radius;\n        var price=this.props.price;\n        var ratings=this.props.reviews;\n\n        var type=[]\n        searchCriteria.map(select=>{\n            type.push(select.label)\n        })\n     \n        // if(searchCriteria.length !== 0 || radius!== 0 || price !==0){\n        //     console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n        // searchCriteria.map(select=> {\n        //     console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n        //     return(\n        //       searchCriteria=select.label\n        //     )\n        //   })\n        //   return (\n        //     <MyMapComponent searchCriteria={searchCriteria} \n        //         price={price*1}\n        //         review={ratings}\n        //         radius={radius*1609} //converting into meters\n        //     />\n        // )\n        //   }\n        // }else{\n        //     console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n        // return (\n        //     <MyMapComponent searchCriteria='' \n        //         price=\"any\"\n        //         review=\"any\"\n        //         radius='0'\n        //     />\n        // )\n        // }\n\n        return (\n            <MyMapComponent searchCriteria={type} \n                price={price*1}\n                review={ratings}\n                radius={radius*1609} //converting into meters\n            />\n        )\n       \n    }\n\n}"]},"metadata":{},"sourceType":"module"}