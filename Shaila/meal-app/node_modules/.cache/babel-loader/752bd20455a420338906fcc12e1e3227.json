{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shaila/mealApp/meal-app/src/MealMap.js\";\n\n/*global google*/\nimport React from \"react\";\nimport { compose, withProps, withHandlers, withState } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nvar mapStyle = {\n  position: \"absolute\",\n  width: \"50%\",\n  height: \"50%\",\n  marginLeft: 600,\n  marginTop: -410\n};\nvar MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      width: \"50%\",\n      height: \"90%\",\n      marginLeft: 600,\n      marginTop: -410\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap, withState('places', 'updatePlaces', '', 'words'), withHandlers(function (props) {\n  var refs = {\n    map: undefined,\n    searchwords: props.words\n  };\n  return {\n    onMapMounted: function onMapMounted() {\n      return function (ref) {\n        refs.map = ref;\n      };\n    },\n    fetchPlaces: function fetchPlaces(_ref) {\n      var updatePlaces = _ref.updatePlaces,\n          words = _ref.words;\n      var bounds = refs.map.getBounds();\n      var keywords = words;\n      var service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n      var request = {\n        location: {\n          lat: 47.583357680523655,\n          lng: -122.36984252929688\n        },\n        bounds: bounds,\n        radius: '1000',\n        type: keywords,\n        fields: ['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n      };\n      service.nearbySearch(request, function (results, status) {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          console.log(results);\n          console.log(keywords);\n          updatePlaces(results);\n        }\n      });\n    }\n  };\n}))(function (props) {\n  //console.log(props.words)\n  return React.createElement(GoogleMap, {\n    onTilesLoaded: props.fetchPlaces,\n    ref: props.onMapMounted,\n    onBoundsChanged: props.fetchPlaces,\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: 47.583357680523655,\n      lng: -122.36984252929688\n    },\n    options: props.words,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.places && props.places.map(function (place, i) {\n    return React.createElement(Marker, {\n      key: i,\n      position: {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }));\n});\n\nvar MealMap =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MealMap, _React$PureComponent);\n\n  function MealMap() {\n    _classCallCheck(this, MealMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MealMap).apply(this, arguments));\n  }\n\n  _createClass(MealMap, [{\n    key: \"render\",\n    value: function render() {\n      var words = this.props.search; // console.log(words);\n\n      return React.createElement(MyMapComponent, {\n        words: words,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MealMap;\n}(React.PureComponent);\n\nexport { MealMap as default };","map":{"version":3,"sources":["/Users/shaila/mealApp/meal-app/src/MealMap.js"],"names":["React","compose","withProps","withHandlers","withState","withScriptjs","withGoogleMap","GoogleMap","Marker","mapStyle","position","width","height","marginLeft","marginTop","MyMapComponent","googleMapURL","loadingElement","containerElement","mapElement","props","refs","map","undefined","searchwords","words","onMapMounted","ref","fetchPlaces","updatePlaces","bounds","getBounds","keywords","service","google","maps","places","PlacesService","context","__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","request","location","lat","lng","radius","type","fields","nearbySearch","results","status","PlacesServiceStatus","OK","console","log","place","i","geometry","MealMap","search","PureComponent"],"mappings":"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","sourcesContent":["/*global google*/\nimport React from \"react\"\nimport { compose, withProps, withHandlers, withState } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\nvar mapStyle = {\n    position: \"absolute\",\n    width: \"50%\",\n    height: \"50%\",\n    marginLeft:600,\n    marginTop:-410};\nconst MyMapComponent = compose(\n\n    withProps(\n        {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places\",\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `100%` }} />,\n        mapElement: <div style={{ position: \"absolute\",\n        width: \"50%\",\n        height: \"90%\",\n        marginLeft:600,\n        marginTop:-410 }} />,\n    }),\n    withScriptjs,\n    withGoogleMap,\n    withState('places', 'updatePlaces','','words'),\n    \n    withHandlers((props) => {\n        const refs = {\n            map: undefined,\n            searchwords:props.words,\n        }\n\n        return {\n            onMapMounted: () => ref => {\n                refs.map = ref\n            },\n            fetchPlaces: ({ updatePlaces, words }) => {\n                const bounds = refs.map.getBounds();\n                const keywords=words;\n                \n                const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n                const request = {\n                    location:{lat:47.583357680523655,lng:-122.36984252929688},\n                    bounds:bounds,\n                    radius: '1000',\n                    type:keywords,\n                    fields:['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n                };\n               \n                service.nearbySearch(request, (results, status) => {\n                    if (status == google.maps.places.PlacesServiceStatus.OK) {\n                        console.log(results);\n                        console.log(keywords);\n                        updatePlaces(results);\n                    }\n                })\n            }\n        }\n    }),\n)((props) => {\n    //console.log(props.words)\n    return (\n        <GoogleMap\n            onTilesLoaded={props.fetchPlaces}\n            ref={props.onMapMounted}\n            onBoundsChanged={props.fetchPlaces}\n            defaultZoom={15}\n            defaultCenter={{lat:47.583357680523655,lng:-122.36984252929688}}\n            options={props.words}\n        >\n        \n            {props.places && props.places.map((place, i) =>\n                <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} />\n            )}\n        </GoogleMap>\n    )\n})\n\nexport default class MealMap extends React.PureComponent {\n    render() {\n\n        const words=this.props.search;\n        // console.log(words);\n\n        return (\n            <MyMapComponent words={words} />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}