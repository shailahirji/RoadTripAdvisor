{"ast":null,"code":"import React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Map from './Map.js';\nimport MF from './MealMap.js';\nimport MealCard from './MealCard.js';\nimport { connect } from \"react-redux\";\nimport MealPref from \"./MealPref\"; // class App extends React.Component{\n// constructor(props){\n//   super(props);\n//   this.state={\n//     selected:[],\n//     count:0,\n//     price_range:'any',//any price range\n//     distance:'any',\n//     ratings:'any'\n//   };\n//   //this.childHandler=this.childHandler.bind(this)\n//   this.selection_Handler=this.selection_Handler.bind(this)\n//   this.PriceRange_Handler=this.PriceRange_Handler.bind(this)\n//   this.distance_Handler=this.distance_Handler.bind(this)\n//   this.ratings_Handler=this.ratings_Handler.bind(this)\n// }\n// //to get data back from Child \n// selection_Handler(selection){\n//   this.setState({\n//     selected:selection\n//   })\n// }\n// PriceRange_Handler(price){\n//   this.setState({\n//     price_range:price\n//   })\n// }\n// distance_Handler(dist){\n//   this.setState({\n//     distance:dist\n//   })\n// }\n// ratings_Handler(ratings){\n//   this.setState({\n//     ratings:ratings\n//   })\n// }\n//     render(){\n//         return(\n//         <div>\n//            <MealCard color=\"#FF6663\"  ></MealCard>\n//            <MF search={this.state.selected} price={this.state.price_range} \n//             reviews={this.state.ratings} radius={this.state.distance}\n//           />\n//           </div>\n//         );\n//     }\n// }\n// export default App;\n\nfunction mapStateToProps(state) {\n  //map redux to component props \n  return {\n    selected: state.selected,\n    price: state.price,\n    radius: state.radius,\n    reviews: state.reviews,\n    results: state.results\n  };\n} //action, to give our component access to the action creators and action \n\n\nvar updateSelectionAction = {\n  type: \"UpdateSelection\"\n};\nvar updatePriceAction = {\n  type: \"UpdatePrice\"\n};\nvar updateRadiusAction = {\n  type: \"UpdateRadius\"\n};\nvar updateReviewsAction = {\n  type: \"UpdateReviews\"\n};\nvar updateResultAction = {\n  type: \"UpdateResults\"\n}; //Map redux actions to component props\n//we return an object containing the name of the two funcions our component can call \n//to dispatch a change to our store\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    update_selection: function update_selection() {\n      //this function fires a dispatch with an action type of update selection\n      return dispatch(updateSelectionAction);\n    },\n    update_price: function update_price() {\n      return dispatch(updatePriceAction);\n    },\n    update_radius: function update_radius() {\n      return dispatch(updateRadiusAction);\n    },\n    update_reviews: function update_reviews() {\n      return dispatch(updateReviewsAction);\n    },\n    update_results: function update_results() {\n      return dispatch(updateResultAction);\n    }\n  };\n} //The HIGH ORDER COMPONENT , ensures that whatever component that owns these has a way of recieving them \n//takes mapStateToProps and mapDispatchToProps as args and passes them to our component  \n\n\nvar connectedComponent = connect(mapStateToProps, mapDispatchToProps)(MealPref);\nexport default connectedComponent;","map":{"version":3,"sources":["/Users/shaila/mealApp/meal-app/src/App.js"],"names":["React","Component","Map","MF","MealCard","connect","MealPref","mapStateToProps","state","selected","price","radius","reviews","results","updateSelectionAction","type","updatePriceAction","updateRadiusAction","updateReviewsAction","updateResultAction","mapDispatchToProps","dispatch","update_selection","update_price","update_radius","update_reviews","update_results","connectedComponent"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,EAAP,MAAe,cAAf;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;AACE;AACE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEJ;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAE;AAC/B,SAAM;AACJC,IAAAA,QAAQ,EAACD,KAAK,CAACC,QADX;AAEJC,IAAAA,KAAK,EAACF,KAAK,CAACE,KAFR;AAGJC,IAAAA,MAAM,EAACH,KAAK,CAACG,MAHT;AAIJC,IAAAA,OAAO,EAACJ,KAAK,CAACI,OAJV;AAKJC,IAAAA,OAAO,EAACL,KAAK,CAACK;AALV,GAAN;AAOD,C,CAED;;;AACA,IAAIC,qBAAqB,GAAE;AAACC,EAAAA,IAAI,EAAC;AAAN,CAA3B;AACA,IAAIC,iBAAiB,GAAE;AAACD,EAAAA,IAAI,EAAC;AAAN,CAAvB;AACA,IAAIE,kBAAkB,GAAE;AAACF,EAAAA,IAAI,EAAC;AAAN,CAAxB;AACA,IAAIG,mBAAmB,GAAE;AAACH,EAAAA,IAAI,EAAC;AAAN,CAAzB;AACA,IAAII,kBAAkB,GAAE;AAACJ,EAAAA,IAAI,EAAC;AAAN,CAAxB,C,CAEA;AACA;AACA;;AACA,SAASK,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAM;AACJC,IAAAA,gBAAgB,EAAC,4BAAU;AAAE;AAC3B,aAAOD,QAAQ,CAACP,qBAAD,CAAf;AACD,KAHG;AAIJS,IAAAA,YAAY,EAAC,wBAAU;AACrB,aAAOF,QAAQ,CAACL,iBAAD,CAAf;AACD,KANG;AAOJQ,IAAAA,aAAa,EAAC,yBAAU;AACtB,aAAOH,QAAQ,CAACJ,kBAAD,CAAf;AACD,KATG;AAUJQ,IAAAA,cAAc,EAAC,0BAAU;AACvB,aAAOJ,QAAQ,CAACH,mBAAD,CAAf;AACD,KAZG;AAaJQ,IAAAA,cAAc,EAAC,0BAAU;AACvB,aAAOL,QAAQ,CAACF,kBAAD,CAAf;AACD;AAfG,GAAN;AAiBD,C,CAED;AACA;;;AACA,IAAIQ,kBAAkB,GAACtB,OAAO,CAC9BE,eAD8B,EAE9Ba,kBAF8B,CAAP,CAGrBd,QAHqB,CAAvB;AAKA,eAAeqB,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Map from './Map.js';\nimport MF from './MealMap.js';\nimport MealCard from './MealCard.js';\nimport {connect} from \"react-redux\";\nimport MealPref from \"./MealPref\"\n\n// class App extends React.Component{\n  // constructor(props){\n    //   super(props);\n\n    //   this.state={\n    //     selected:[],\n    //     count:0,\n    //     price_range:'any',//any price range\n    //     distance:'any',\n    //     ratings:'any'\n    //   };\n    //   //this.childHandler=this.childHandler.bind(this)\n    //   this.selection_Handler=this.selection_Handler.bind(this)\n    //   this.PriceRange_Handler=this.PriceRange_Handler.bind(this)\n    //   this.distance_Handler=this.distance_Handler.bind(this)\n    //   this.ratings_Handler=this.ratings_Handler.bind(this)\n    // }\n \n    // //to get data back from Child \n    // selection_Handler(selection){\n    //   this.setState({\n    //     selected:selection\n    //   })\n    // }\n\n    // PriceRange_Handler(price){\n    //   this.setState({\n    //     price_range:price\n    //   })\n    // }\n\n    // distance_Handler(dist){\n    //   this.setState({\n    //     distance:dist\n    //   })\n    // }\n\n    // ratings_Handler(ratings){\n    //   this.setState({\n    //     ratings:ratings\n    //   })\n    // }\n\n//     render(){\n      \n//         return(\n//         <div>\n//            <MealCard color=\"#FF6663\"  ></MealCard>\n            \n//            <MF search={this.state.selected} price={this.state.price_range} \n//             reviews={this.state.ratings} radius={this.state.distance}\n//           />\n//           </div>\n  \n         \n          \n//         );\n//     }\n// }\n\n// export default App;\n\nfunction mapStateToProps(state){ //map redux to component props \n  return{\n    selected:state.selected,\n    price:state.price,\n    radius:state.radius,\n    reviews:state.reviews,\n    results:state.results\n  };\n}\n\n//action, to give our component access to the action creators and action \nvar updateSelectionAction= {type:\"UpdateSelection\"};\nvar updatePriceAction= {type:\"UpdatePrice\"};\nvar updateRadiusAction= {type:\"UpdateRadius\"};\nvar updateReviewsAction= {type:\"UpdateReviews\"};\nvar updateResultAction= {type:\"UpdateResults\"};\n\n//Map redux actions to component props\n//we return an object containing the name of the two funcions our component can call \n//to dispatch a change to our store\nfunction mapDispatchToProps(dispatch){\n  return{\n    update_selection:function(){ //this function fires a dispatch with an action type of update selection\n      return dispatch(updateSelectionAction);\n    },\n    update_price:function(){\n      return dispatch(updatePriceAction);\n    },\n    update_radius:function(){\n      return dispatch(updateRadiusAction);\n    },\n    update_reviews:function(){\n      return dispatch(updateReviewsAction);\n    },\n    update_results:function(){\n      return dispatch(updateResultAction);\n    }\n  };\n}\n\n//The HIGH ORDER COMPONENT , ensures that whatever component that owns these has a way of recieving them \n//takes mapStateToProps and mapDispatchToProps as args and passes them to our component  \nvar connectedComponent=connect(\nmapStateToProps,\nmapDispatchToProps\n)(MealPref);\n\nexport default connectedComponent;"]},"metadata":{},"sourceType":"module"}