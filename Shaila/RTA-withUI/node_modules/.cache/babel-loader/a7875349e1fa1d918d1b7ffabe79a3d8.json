{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/shaila/my-googlemap/src/App.js\";\nimport React, { Component } from 'react'; //import { Map, GoogleApiWrapper } from 'google-maps-react';\n\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport Geocode from 'react-geocode';\nimport CurrentLocation from './Map';\nvar mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, props));\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    _this.clicking = _this.clicking.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      showingInfoWindow: false,\n      //hids or shows the info window\n      activeMarker: {},\n      //show active marker upon click\n      selectedPlace: {} //show the infowindow to the selected place upon a marker\n\n    };\n    return _this;\n  } //used to show info window which is a component of google maps react library. Give us the ability for pop up window showing details of \n  //clicked place or marker \n  //prop is a boolean that contrls the infowindow, show -> true, hide->false\n  // onMarkerClick=(props,marker,e)=>\n  //   this.setState({\n  //     showingInfoWindow: true,\n  //     activeMarker: marker,\n  //     selectedPlace:props\n  //   });\n\n\n  _createClass(MapContainer, [{\n    key: \"clicking\",\n    value: function clicking(props, marker, e) {\n      console.log(this.prevState);\n      this.setState(function (prevState) {\n        return {\n          showingInfoWindow: !prevState,\n          activeMarker: marker,\n          selectedPlace: props\n        };\n      });\n    } //closes the infoWindow once a user clicks the button\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.state.showingInfoWindow);\n      return React.createElement(CurrentLocation, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.clicking,\n        name: this.state.showingInfoWindow ? this.state.selectedPlace.mapCenter.name_loc : 'nothing',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.selectedPlace.name))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper(function (props) {\n  return {\n    apiKey: 'AIzaSyD-a_aMfM44H43DL1gkBccsYjcYgZTZWQk'\n  };\n})(MapContainer);","map":{"version":3,"sources":["/Users/shaila/my-googlemap/src/App.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","Geocode","CurrentLocation","mapStyles","width","height","MapContainer","props","onClose","state","showingInfoWindow","setState","activeMarker","clicking","bind","selectedPlace","marker","e","console","log","prevState","google","mapCenter","name_loc","name","apiKey"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAAQC,GAAR,EAAYC,gBAAZ,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAuD,mBAAvD;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,eAAP,MAA4B,OAA5B;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AACE,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,sFAAMA,KAAN;;AADgB,UAiChBC,OAjCgB,GAiCR,UAAAD,KAAK,EAAG;AACd,UAAG,MAAKE,KAAL,CAAWC,iBAAd,EAAgC;AAC9B,cAAKC,QAAL,CAAc;AACZD,UAAAA,iBAAiB,EAAC,KADN;AAEZE,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAxCe;;AAElB,UAAKC,QAAL,GAAc,MAAKA,QAAL,CAAcC,IAAd,uDAAd;AACA,UAAKL,KAAL,GAAW;AACTC,MAAAA,iBAAiB,EAAC,KADT;AACgB;AACzBE,MAAAA,YAAY,EAAC,EAFJ;AAEO;AAChBG,MAAAA,aAAa,EAAC,EAHL,CAGQ;;AAHR,KAAX;AAHkB;AAQnB,GATD,CAUE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAlBF;AAAA;AAAA,6BAoBaR,KApBb,EAoBmBS,MApBnB,EAoB0BC,CApB1B,EAoB4B;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,SAAjB;AACA,WAAKT,QAAL,CAAc,UAACS,SAAD,EAAa;AAEzB,eAAM;AACJV,UAAAA,iBAAiB,EAAC,CAACU,SADf;AAEJR,UAAAA,YAAY,EAACI,MAFT;AAGJD,UAAAA,aAAa,EAACR;AAHV,SAAN;AAMD,OARD;AASD,KA/BL,CAiCI;;AAjCJ;AAAA;AAAA,6BA2CW;AACT;AACF,aACE,oBAAC,eAAD;AACA,QAAA,2BAA2B,MAD3B;AAEA,QAAA,MAAM,EAAE,KAAKA,KAAL,CAAWc,MAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKA,oBAAC,MAAD;AACA,QAAA,OAAO,EAAE,KAAKR,QADd;AAEA,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,iBAAX,GAA+B,KAAKD,KAAL,CAAWM,aAAX,CAAyBO,SAAzB,CAAmCC,QAAlE,GAA6E,SAFnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,EASA,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKd,KAAL,CAAWG,YADrB;AAEE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,iBAFtB;AAGE,QAAA,OAAO,EAAE,KAAKF,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKC,KAAL,CAAWM,aAAX,CAAyBS,IAA9B,CADF,CALF,CATA,CADF;AAwBC;AArED;;AAAA;AAAA,EAAkC5B,SAAlC;AAwEA,eAAeE,gBAAgB,CAC/B,UAACS,KAAD;AAAA,SAAU;AACRkB,IAAAA,MAAM,EAAC;AADC,GAAV;AAAA,CAD+B,CAAhB,CAIZnB,YAJY,CAAf","sourcesContent":["import React, { Component } from 'react';\n//import { Map, GoogleApiWrapper } from 'google-maps-react';\nimport {Map,GoogleApiWrapper, InfoWindow ,Marker} from 'google-maps-react';\nimport Geocode from 'react-geocode';\n\nimport CurrentLocation from './Map';\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nexport class MapContainer extends Component {\n  constructor(props){\n    super(props);\n  this.clicking=this.clicking.bind(this);\n  this.state={\n    showingInfoWindow:false, //hids or shows the info window\n    activeMarker:{},//show active marker upon click\n    selectedPlace:{} //show the infowindow to the selected place upon a marker\n  };\n}\n  //used to show info window which is a component of google maps react library. Give us the ability for pop up window showing details of \n  //clicked place or marker \n  //prop is a boolean that contrls the infowindow, show -> true, hide->false\n  // onMarkerClick=(props,marker,e)=>\n  //   this.setState({\n  //     showingInfoWindow: true,\n  //     activeMarker: marker,\n  //     selectedPlace:props\n  //   });\n\n    clicking(props,marker,e){\n      console.log(this.prevState);\n      this.setState((prevState)=>{\n   \n        return{\n          showingInfoWindow:!prevState,\n          activeMarker:marker,\n          selectedPlace:props\n        };\n\n      });\n    }\n\n    //closes the infoWindow once a user clicks the button\n    onClose=props =>{\n      if(this.state.showingInfoWindow){\n        this.setState({\n          showingInfoWindow:false,\n          activeMarker: null\n        });\n      }\n    };\n\n  render() {\n  //console.log(this.state.showingInfoWindow);\nreturn(\n  <CurrentLocation\n  centerAroundCurrentLocation\n  google={this.props.google}\n\n  >\n  <Marker\n  onClick={this.clicking}  \n  name={this.state.showingInfoWindow ? this.state.selectedPlace.mapCenter.name_loc : 'nothing'}\n  />\n  <InfoWindow\n    marker={this.state.activeMarker}\n    visible={this.state.showingInfoWindow}\n    onClose={this.onClose}\n    >\n    <div>\n      <h4>{this.state.selectedPlace.name}</h4>\n    </div>\n\n    </InfoWindow>\n\n  </CurrentLocation>\n\n);\n}\n}\n\nexport default GoogleApiWrapper(\n(props)=>({\n  apiKey:'AIzaSyD-a_aMfM44H43DL1gkBccsYjcYgZTZWQk'\n}\n))(MapContainer)"]},"metadata":{},"sourceType":"module"}