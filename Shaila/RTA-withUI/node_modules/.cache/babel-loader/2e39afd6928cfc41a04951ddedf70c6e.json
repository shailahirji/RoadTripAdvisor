{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/Downloads/Capstone-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/Downloads/Capstone-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/Downloads/Capstone-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/Downloads/Capstone-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/Downloads/Capstone-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shaila/Downloads/Capstone-master/src/components/MapContainer.js\";\nimport React, { Component } from 'react'; //import { Map, GoogleApiWrapper } from 'google-maps-react';\n\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLocation from './Map';\nvar mapStyles = {\n  width: '100%',\n  height: '100%'\n}; //mapcontainer is responsible for loading google API and demonstare usage\n//Map component is placed inside the container, currently the single feature, CurrentLocation\n\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapContainer, _React$Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showingInfoWindow: false,\n      //hids or shows the info window\n      activeMarker: {},\n      //show active marker upon click\n      selectedPlace: {} //show the infowindow to the selected place upon a marker\n\n    };\n\n    _this.onMarkerClick = function (props, marker, e) {\n      return _this.setState({\n        showingInfoWindow: true,\n        activeMarker: marker,\n        selectedPlace: props\n      });\n    };\n\n    _this.onClose = function (props) {\n      if (_this.state.showingInfoWindow) {\n        _this.setState({\n          showingInfoWindow: false,\n          activeMarker: null,\n          selectedPlace: null\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    // building marker component, we make marker child of map component. We build <Marker/> component as child of the Map so that they are\n    // independent of the Map itself but interdependent if map is available\n    value: function render() {\n      var show_name;\n\n      if (this.state.showingInfoWindow) {\n        show_name = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, this.state.selectedPlace.mapCenter.name_loc));\n      } else {\n        show_name = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"\"));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Hello World\", React.createElement(CurrentLocation, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google //placing the map conponent inside the container \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, show_name))));\n    }\n  }]);\n\n  return MapContainer;\n}(React.Component);\nexport default MapContainer(function (props) {\n  return {\n    apiKey: 'AIzaSyD-a_aMfM44H43DL1gkBccsYjcYgZTZWQk'\n  };\n})(MapContainer);","map":{"version":3,"sources":["/Users/shaila/Downloads/Capstone-master/src/components/MapContainer.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","CurrentLocation","mapStyles","width","height","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","show_name","mapCenter","name_loc","google","apiKey"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAAQC,GAAR,EAAYC,gBAAZ,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAuD,mBAAvD;AAEA,OAAOC,eAAP,MAA4B,OAA5B;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB,C,CAKA;AACA;;AACA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,KADF,GACQ;AACJC,MAAAA,iBAAiB,EAAC,KADd;AACqB;AACzBC,MAAAA,YAAY,EAAC,EAFT;AAEY;AAChBC,MAAAA,aAAa,EAAC,EAHV,CAGa;;AAHb,KADR;;AAAA,UASEC,aATF,GASgB,UAACC,KAAD,EAAOC,MAAP,EAAcC,CAAd;AAAA,aACZ,MAAKC,QAAL,CAAc;AACZP,QAAAA,iBAAiB,EAAC,IADN;AAEZC,QAAAA,YAAY,EAAEI,MAFF;AAGZH,QAAAA,aAAa,EAACE;AAHF,OAAd,CADY;AAAA,KAThB;;AAAA,UAiBII,OAjBJ,GAiBY,UAAAJ,KAAK,EAAG;AACd,UAAG,MAAKL,KAAL,CAAWC,iBAAd,EAAgC;AAC9B,cAAKO,QAAL,CAAc;AACZP,UAAAA,iBAAiB,EAAC,KADN;AAEZC,UAAAA,YAAY,EAAE,IAFF;AAGZC,UAAAA,aAAa,EAAC;AAHF,SAAd;AAKD;AACF,KAzBL;;AAAA;AAAA;;AAAA;AAAA;AA2BI;AACA;AA5BJ,6BA6BW;AACT,UAAIO,SAAJ;;AACA,UAAG,KAAKV,KAAL,CAAWC,iBAAd,EAAgC;AAC9BS,QAAAA,SAAS,GAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKV,KAAL,CAAWG,aAAX,CAAyBQ,SAAzB,CAAmCC,QAAxC,CADS,CAAX;AAGD,OAJD,MAIK;AACHF,QAAAA,SAAS,GAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,EAAL,CADS,CAAX;AAGD;;AACD,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEF,oBAAC,eAAD;AACA,QAAA,2BAA2B,MAD3B;AAEA,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWQ,MAFnB,CAE2B;AAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIA,oBAAC,MAAD;AACA,QAAA,OAAO,EAAE,KAAKT,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,EAOA,oBAAC,UAAD;AACE,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE,YADrB;AAEE,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,iBAFtB;AAGE,QAAA,OAAO,EAAE,KAAKQ,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,SADH,CALF,CAPA,CAFE,CADF;AAwBD;AAhED;;AAAA;AAAA,EAAkCrB,KAAK,CAACC,SAAxC;AAqEA,eAAeS,YAAY,CAC3B,UAACM,KAAD;AAAA,SAAU;AACRS,IAAAA,MAAM,EAAC;AADC,GAAV;AAAA,CAD2B,CAAZ,CAIZf,YAJY,CAAf","sourcesContent":["import React, { Component } from 'react';\n//import { Map, GoogleApiWrapper } from 'google-maps-react';\nimport {Map,GoogleApiWrapper, InfoWindow ,Marker} from 'google-maps-react';\n\nimport CurrentLocation from './Map';\n\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\n//mapcontainer is responsible for loading google API and demonstare usage\n//Map component is placed inside the container, currently the single feature, CurrentLocation\nexport class MapContainer extends React.Component {\n  state={\n    showingInfoWindow:false, //hids or shows the info window\n    activeMarker:{},//show active marker upon click\n    selectedPlace:{} //show the infowindow to the selected place upon a marker\n  };\n  //used to show info window which is a component of google maps react library. Give us the ability for pop up window showing details of \n  //clicked place or marker \n  //prop is a boolean that contrls the infowindow, show -> true, hide->false\n  onMarkerClick=(props,marker,e)=>\n    this.setState({\n      showingInfoWindow:true,\n      activeMarker: marker,\n      selectedPlace:props\n    });\n\n    //closes the infoWindow once a user clicks the button\n    onClose=props =>{\n      if(this.state.showingInfoWindow){\n        this.setState({\n          showingInfoWindow:false,\n          activeMarker: null,\n          selectedPlace:null\n        });\n      }\n    };\n\n    // building marker component, we make marker child of map component. We build <Marker/> component as child of the Map so that they are\n    // independent of the Map itself but interdependent if map is available\n  render() {\n  let show_name;\n  if(this.state.showingInfoWindow){\n    show_name=(<div>\n      <h4>{this.state.selectedPlace.mapCenter.name_loc}</h4>\n    </div>)\n  }else{\n    show_name=(<div>\n      <h4>{\"\"}</h4>\n    </div>)\n  }\n  return(\n    <div className=\"App\">\n    Hello World\n  <CurrentLocation\n  centerAroundCurrentLocation\n  google={this.props.google} //placing the map conponent inside the container \n  >\n  <Marker\n  onClick={this.onMarkerClick}  \n  /> \n  <InfoWindow\n    marker={this.state.activeMarker}\n    visible={this.state.showingInfoWindow}\n    onClose={this.onClose}\n    >\n    <div>\n      {show_name}\n    </div>\n\n    </InfoWindow>\n  </CurrentLocation>\n  </div>\n\n);\n}\n  }\n\n\n  \nexport default MapContainer(\n(props)=>({\n  apiKey:'AIzaSyD-a_aMfM44H43DL1gkBccsYjcYgZTZWQk'\n}\n))(MapContainer)"]},"metadata":{},"sourceType":"module"}