{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shaila/mealApp/meal-app/src/MealMap.js\";\n\n/*global google*/\nimport React from \"react\";\nimport { compose, withProps, withHandlers, withState } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nvar MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places,geometry\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      width: \"50%\",\n      height: \"70%\",\n      marginLeft: 489,\n      marginTop: -411.9\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap, withState('places', 'updatePlaces', '', 'words', 'radius'), withHandlers(function () {\n  var refs = {\n    map: undefined\n  };\n  return {\n    onMapMounted: function onMapMounted() {\n      return function (ref) {\n        refs.map = ref;\n      };\n    },\n    fetchPlaces: function fetchPlaces(_ref) {\n      var updatePlaces = _ref.updatePlaces,\n          words = _ref.words,\n          radius = _ref.radius;\n      var bounds = refs.map.getBounds();\n      var keywords = words;\n      var loc = new google.maps.LatLng(47.6769683, -122.0284808);\n      var service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n      var request = {\n        location: {\n          lat: 47.6769683,\n          lng: -122.0284808\n        },\n        //location:(new google.maps.LatLng(47.6769683,-122.0284808)),\n        bounds: bounds,\n        radius: radius,\n        type: keywords,\n        openNow: true,\n        fields: ['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n      };\n      service.nearbySearch(request, function (results, status) {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          console.log(results);\n          console.log(bounds);\n          console.log(radius);\n          updatePlaces(results);\n        }\n      });\n    }\n  };\n}))(function (props) {\n  console.log(props.radius);\n  var target = new google.maps.LatLng(47.6769683, -122.0284808);\n  var option = []; //new array to print\n\n  if (props.places) {\n    props.places.map(function (place, i) //console.log({ lat: place.geometry.location.lat(), lng: place.geometry.location.lng()})\n    {\n      if (google.maps.geometry.spherical.computeDistanceBetween(target, new google.maps.LatLng(place.geometry.location.lat(), place.geometry.location.lng())) < props.radius) {\n        option.push(place);\n      }\n    });\n  }\n\n  console.log(option);\n  return React.createElement(GoogleMap, {\n    onTilesLoaded: props.fetchPlaces,\n    ref: props.onMapMounted,\n    onBoundsChanged: props.fetchPlaces,\n    defaultZoom: 10,\n    defaultCenter: {\n      lat: 47.6769683,\n      lng: -122.0284808\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, option && option.map(function (place, i) {\n    return React.createElement(Marker, {\n      key: i,\n      position: {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  }));\n});\n\nvar MealMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MealMap, _React$Component);\n\n  function MealMap() {\n    _classCallCheck(this, MealMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MealMap).apply(this, arguments));\n  }\n\n  _createClass(MealMap, [{\n    key: \"render\",\n    value: function render() {\n      var words = this.props.search;\n      var radius = this.props.radius;\n\n      if (words.length !== 0 || radius !== 'any') {\n        words.map(function (select) {\n          return words = select.label;\n        });\n        return React.createElement(MyMapComponent, {\n          words: words,\n          price: this.props.price,\n          review: this.props.review,\n          radius: radius * 1609 //converting into meters\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(MyMapComponent, {\n        words: \"\",\n        price: \"any\",\n        review: \"any\",\n        radius: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MealMap;\n}(React.Component);\n\nexport { MealMap as default };","map":{"version":3,"sources":["/Users/shaila/mealApp/meal-app/src/MealMap.js"],"names":["React","compose","withProps","withHandlers","withState","withScriptjs","withGoogleMap","GoogleMap","Marker","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","position","width","marginLeft","marginTop","refs","map","undefined","onMapMounted","ref","fetchPlaces","updatePlaces","words","radius","bounds","getBounds","keywords","loc","google","maps","LatLng","service","places","PlacesService","context","__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","request","location","lat","lng","type","openNow","fields","nearbySearch","results","status","PlacesServiceStatus","OK","console","log","props","target","option","place","i","geometry","spherical","computeDistanceBetween","push","MealMap","search","length","select","label","price","review","Component"],"mappings":"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","sourcesContent":["/*global google*/\nimport React from \"react\"\nimport { compose, withProps, withHandlers, withState } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\n\nconst MyMapComponent = compose(\n\n    withProps(\n        {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places,geometry\",\n        loadingElement: <div style={{ height: '100vh' }} />,\n        containerElement: <div style={{height: '100vh' }} />,\n        mapElement: <div style={{ position:\"fixed\",\n        width: \"50%\",\n        height: \"70%\",\n        marginLeft:489,\n        marginTop:-411.9 }} />,\n    }),\n    withScriptjs,\n    withGoogleMap,\n    withState('places', 'updatePlaces','','words','radius'),\n    \n    withHandlers(() => {\n        const refs = {\n            map: undefined,\n    \n        }\n        return {\n            onMapMounted: () => ref => {\n                refs.map = ref\n            },\n            fetchPlaces: ({ updatePlaces, words, radius }) => {\n                const bounds = refs.map.getBounds();\n                var keywords=words;\n                var loc= new google.maps.LatLng(47.6769683,-122.0284808)\n                const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n                const request = {\n                    location:{lat:47.6769683,lng:-122.0284808},//location:(new google.maps.LatLng(47.6769683,-122.0284808)),\n                    bounds:bounds,\n                    radius: radius,\n                    type:keywords,\n                    openNow:true,\n                    fields:['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n                };\n               \n                service.nearbySearch(request, (results, status) => {\n                    if (status == google.maps.places.PlacesServiceStatus.OK) {\n                        console.log(results);\n                        console.log(bounds);\n                        console.log(radius);\n                        updatePlaces(results);\n                    }\n                })\n            }\n        }\n    }),\n)((props) => {\n  console.log(props.radius)\n    var target=new google.maps.LatLng(47.6769683,-122.0284808);\n    var option=[]; //new array to print\n    if(props.places){\n        props.places.map((place,i)=>\n            //console.log({ lat: place.geometry.location.lat(), lng: place.geometry.location.lng()})\n            {if(google.maps.geometry.spherical.computeDistanceBetween(target,new google.maps.LatLng(place.geometry.location.lat(),place.geometry.location.lng()))<props.radius){\n                option.push(place);\n            }\n        }\n        )\n    }\n    console.log(option);\n    \n    return (\n    \n        <GoogleMap\n            onTilesLoaded={props.fetchPlaces}\n            ref={props.onMapMounted}\n            onBoundsChanged={props.fetchPlaces}\n            defaultZoom={10}\n            defaultCenter={{lat:47.6769683,lng:-122.0284808}}\n        >\n            {option && option.map((place, i) =>                \n                \n                <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} >\n                </Marker>\n                \n            )}\n        </GoogleMap>\n        \n    )\n   \n})\n\nexport default class MealMap extends React.Component {\n\n    render() {\n\n        var words=this.props.search;\n        var radius=this.props.radius;\n     \n        if(words.length !== 0 || radius!== 'any'){\n        words.map(select=> {\n            return(\n              words=select.label\n            )\n          })\n          return (\n            <MyMapComponent words={words} \n                price={this.props.price}\n                review={this.props.review}\n                radius={radius*1609} //converting into meters\n            />\n        )\n        }\n\n        return (\n            <MyMapComponent words='' \n                price=\"any\"\n                review=\"any\"\n                radius='0'\n            />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}