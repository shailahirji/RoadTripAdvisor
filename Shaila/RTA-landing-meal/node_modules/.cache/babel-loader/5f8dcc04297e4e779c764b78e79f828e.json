{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/mealApp/meal-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/Users/shaila/mealApp/meal-app/src/MealMap.js\",\n    _this = this;\n\n/*global google*/\nimport React from \"react\";\nimport { compose, withProps, withHandlers, withState, withStateHandlers } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nvar h = [];\nvar MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places,geometry\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"50%\",\n      height: 382,\n      WebkitFilter: \"drop-shadow(0px 0px 5px #666)\",\n      marginLeft: 491,\n      marginTop: -411.9\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap, withState('places', 'updatePlaces', '', 'searchCriteria', 'radius', 'currLat', 'currLng'), withStateHandlers(function () {\n  return {\n    isOpen: false,\n    markerIndex: 0,\n    currentLatLng: {\n      lat: 47.6769683,\n      lng: -90.6769683\n    }\n  };\n}, {\n  onToggleOpen: function onToggleOpen(_ref) {\n    var isOpen = _ref.isOpen;\n    return function (index) {\n      return {\n        isOpen: !isOpen,\n        markerIndex: index\n      };\n    };\n  }\n}), withHandlers(function () {\n  var refs = {\n    map: undefined,\n    array: []\n  };\n  return {\n    onMapMounted: function onMapMounted() {\n      return function (ref) {\n        refs.map = ref;\n      };\n    },\n    fetchPlaces: function fetchPlaces(_ref2) {\n      var updatePlaces = _ref2.updatePlaces,\n          searchCriteria = _ref2.searchCriteria,\n          radius = _ref2.radius,\n          price = _ref2.price,\n          review = _ref2.review,\n          defaultCenter = _ref2.defaultCenter;\n      var bounds = refs.map.getBounds();\n      refs.array = searchCriteria;\n      console.log(refs.array.length); //var typeSearchCriteria=searchCriteria;\n\n      var maxPrice = price;\n      var searchRating = review;\n      var service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n      var x;\n      var output = [];\n\n      for (x = 0; x < refs.array.length; x++) {\n        //console.log(refs.array[x])\n        var request = {\n          location: defaultCenter,\n          //location:(new google.maps.LatLng(47.6769683,-122.0284808)),or {lat:47.6769683,lng:-122.0284808}\n          bounds: bounds,\n          radius: radius,\n          type: refs.array[x],\n          openNow: true,\n          maxPriceLevel: maxPrice,\n          fields: ['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n        };\n        var shal = \"@ @ # $ \";\n        var that = _this;\n        console.log(\"we are printing this \" + _this);\n        service.nearbySearch(request, function (results, status) {\n          return new Promise(function (reject, resolve) {\n            if (status === google.maps.places.PlacesServiceStatus.OK) {\n              var x;\n\n              for (x = 0; x < results.length; x++) {\n                h.push(results[x]);\n              }\n\n              resolve(h); //that.setState({output})\n\n              console.log(h); // console.log(\"Radius inside withhandlers \"+radius);\n              // console.log(\"Reviews inside withhandlers \"+review);\n              //updatePlaces(results);    \n            } else {\n              reject();\n            }\n          });\n        }).then(function (result) {\n          console.log(\"at last\");\n        });\n      }\n\n      if (h.length > 0) {\n        //console.log(\"HERE!!!!!!\"+ output.length);\n        var j;\n\n        for (j = 0; j < h.length; j++) {\n          console.log(h[j]);\n        } // updatePlaces(output);\n\n      }\n\n      updatePlaces(h); // console.log(output);\n    },\n    currentLoc: function currentLoc(_ref3) {\n      var currLat = _ref3.currLat,\n          currLng = _ref3.currLng;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          currLat = position.coords.latitude;\n          currLng = position.coords.longitude;\n        });\n        console.log();\n      }\n    }\n  };\n}))(function (props) {\n  //console.log(\"Radius \"+ props.radius)\n  if (props.places != null) //console.log(\"helloo\"+props.places)\n    var target = new google.maps.LatLng(47.6769683, -122.0284808);\n\n  if (props.defaultCenter !== undefined) {\n    target = props.defaultCenter;\n  }\n\n  var option = []; //new array to store results based on search criteria\n\n  if (props.places) {\n    console.log(\"here####\"); // props.places.map((place,i)=>\n    //     {\n    //     console.log({ lat: place.geometry.location.lat(), lng: place.geometry.location.lng()})\n    //     if(google.maps.geometry.spherical.computeDistanceBetween(target,new google.maps.LatLng(place.geometry.location.lat(),place.geometry.location.lng()))<props.radius){\n    //         option.push(place);\n    //     }\n    //     if(place.price_level<=props.price){\n    //         option.push(place)\n    //     }\n    //     console.log('stuck here')\n    //     if(place.types.length !== 0 && place.types.includes(props.searchCriteria)){\n    //         console.log(\"here \"+props.searchCriteria)\n    //         option.push(place)\n    //     }\n    // }\n    // )\n  } // var places_index;\n  // for(places_index=0;places_index<props.places.length;places_index++){\n  //     var results=props.places[places_index]\n  //     console.log(results)\n  // }\n\n\n  console.log(option); // if(navigator.geolocation){\n  //     navigator.geolocation.getCurrentPosition(\n  //         position=>{\n  //                 props.currentLatLng.lat=position.coords.latitude\n  //                 props.currentLatLng.lng=position.coords.longitude\n  //             })\n  //         }\n  //console.log(props.currLat);\n\n  return React.createElement(GoogleMap, {\n    onTilesLoaded: props.fetchPlaces,\n    ref: props.onMapMounted,\n    onClick: props.fetchPlaces,\n    defaultZoom: 10,\n    defaultCenter: {\n      lat: 47.6769683,\n      lng: -122.0284808\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, option && option.map(function (place, i) {\n    return React.createElement(Marker, {\n      key: i,\n      position: {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      },\n      onClick: function onClick() {\n        props.onToggleOpen(i);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, props.isOpen && props.markerIndex === i && React.createElement(InfoWindow, {\n      onCloseClick: props.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, place.name)));\n  }));\n});\n\nvar MealMap =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MealMap, _React$Component);\n\n  function MealMap() {\n    _classCallCheck(this, MealMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MealMap).apply(this, arguments));\n  }\n\n  _createClass(MealMap, [{\n    key: \"render\",\n    value: function render() {\n      var searchCriteria = this.props.search;\n      var radius = this.props.radius;\n      var price = this.props.price;\n      var ratings = this.props.reviews;\n      var types = [];\n\n      if (searchCriteria.length !== 0 || radius !== 0 || price !== 0) {\n        console.log(searchCriteria + \" \" + radius + \" \" + price + \" \" + ratings); // searchCriteria.map(select=> {\n        //     console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n        //     return(\n        //       searchCriteria=select.label\n        //     )\n        //   })\n\n        searchCriteria.map(function (select) {\n          types.push(select.label);\n        });\n        return React.createElement(MyMapComponent, {\n          searchCriteria: types,\n          price: price * 1,\n          review: ratings,\n          radius: radius * 1609 //converting into meters\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        });\n      } // }else{\n      //     console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n\n\n      return (//to prevent from crashing\n        React.createElement(MyMapComponent, {\n          searchCriteria: \"\",\n          price: \"any\",\n          review: \"any\",\n          radius: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        })\n      ); // }\n    }\n  }]);\n\n  return MealMap;\n}(React.Component);\n\nexport { MealMap as default };","map":{"version":3,"sources":["/Users/shaila/mealApp/meal-app/src/MealMap.js"],"names":["React","compose","withProps","withHandlers","withState","withStateHandlers","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","h","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","position","width","WebkitFilter","marginLeft","marginTop","isOpen","markerIndex","currentLatLng","lat","lng","onToggleOpen","index","refs","map","undefined","array","onMapMounted","ref","fetchPlaces","updatePlaces","searchCriteria","radius","price","review","defaultCenter","bounds","getBounds","console","log","length","maxPrice","searchRating","service","google","maps","places","PlacesService","context","__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","x","output","request","location","type","openNow","maxPriceLevel","fields","shal","that","nearbySearch","results","status","Promise","reject","resolve","PlacesServiceStatus","OK","push","then","result","j","currentLoc","currLat","currLng","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","props","target","LatLng","option","place","i","geometry","name","MealMap","search","ratings","reviews","types","select","label","Component"],"mappings":"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","sourcesContent":["/*global google*/\nimport React from \"react\"\nimport { compose, withProps, withHandlers, withState,withStateHandlers } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker , InfoWindow } from \"react-google-maps\"\n\nvar h=[];\n\n\nconst MyMapComponent = compose(\n\n    withProps(\n        {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD8kEdQYnlfJaGYD70GNqtxzf7oet_3wwY&libraries=places,geometry\",\n        loadingElement: <div style={{ height: '100vh' }} />,\n        containerElement: <div style={{height: '100vh' }} />,\n        mapElement: <div style={{ position:\"relative\",\n        width: \"50%\",\n        height: 382,\n        WebkitFilter: \"drop-shadow(0px 0px 5px #666)\",\n        marginLeft:491,\n        marginTop:-411.9 }} />,\n    }),\n    withScriptjs,\n    withGoogleMap,\n    withState('places', 'updatePlaces','','searchCriteria','radius','currLat','currLng'),\n    withStateHandlers(()=>({\n        isOpen:false,\n        markerIndex:0,\n        currentLatLng:{\n            lat:47.6769683,lng:-90.6769683\n        }\n    }),{\n        onToggleOpen:({isOpen})=>(index)=>({\n            isOpen:!isOpen,\n            markerIndex:index\n        })\n    },\n    ),\n    withHandlers(() => {\n        const refs = {\n            map: undefined,\n            array:[]\n        }\n        return {\n            onMapMounted: () => ref => {\n                refs.map = ref\n            },\n            fetchPlaces: ({ updatePlaces, searchCriteria, radius ,price , review ,defaultCenter }) => {\n                const bounds = refs.map.getBounds();\n                refs.array=searchCriteria\n                console.log(refs.array.length)\n                //var typeSearchCriteria=searchCriteria;\n                var maxPrice=price\n                var searchRating=review\n                const service = new google.maps.places.PlacesService(refs.map.context.__SECRET_MAP_DO_NOT_USE_OR_YOU_WILL_BE_FIRED);\n                var x;\n                var output=[];\n                for(x=0;x<refs.array.length;x++){\n                    //console.log(refs.array[x])\n                var request = {\n                    location:defaultCenter,//location:(new google.maps.LatLng(47.6769683,-122.0284808)),or {lat:47.6769683,lng:-122.0284808}\n                    bounds:bounds,\n                    radius: radius,\n                    type:refs.array[x],\n                    openNow:true,\n                    maxPriceLevel:maxPrice,\n                    fields:['photos', 'formatted_address', 'name', 'rating', 'opening_hours', 'geometry']\n                };\n                let shal=\"@ @ # $ \";\n                var that=this;\n                console.log(\"we are printing this \"+this);\n               service.nearbySearch(request, (results, status) => {\n                \n                    return new Promise((reject, resolve)=>{\n                        if (status === google.maps.places.PlacesServiceStatus.OK) {\n                            var x;\n                            for(x=0;x<results.length;x++)\n                           h.push(results[x]);\n                           resolve(h);\n                            //that.setState({output})\n                            console.log(h);\n                            // console.log(\"Radius inside withhandlers \"+radius);\n                            // console.log(\"Reviews inside withhandlers \"+review);\n                            //updatePlaces(results);    \n                        }else{\n                            reject();\n                        }\n                    })\n                   \n                }).then(result => {console.log(\"at last\")})  \n               \n            }\n        \n            if(h.length>0){\n                \n                //console.log(\"HERE!!!!!!\"+ output.length);\n                var j;\n                for(j=0;j<h.length;j++)\n                console.log(h[j])\n                // updatePlaces(output);\n            }\n            updatePlaces(h);\n           // console.log(output);\n            \n            }\n            ,\n            \n            currentLoc: ({currLat,currLng})=>{\n                if(navigator.geolocation){\n                    navigator.geolocation.getCurrentPosition(\n                        position=>{\n                               currLat=position.coords.latitude\n                               currLng=position.coords.longitude\n                            })\n                         console.log()\n                        }\n                     \n            }\n        }\n    }),\n)((props) => {\n//console.log(\"Radius \"+ props.radius)\n\nif(props.places != null)\n//console.log(\"helloo\"+props.places)\n\n    var target=new google.maps.LatLng(47.6769683,-122.0284808);\n    if(props.defaultCenter !== undefined){\n        target=props.defaultCenter\n    }\n    var option=[]; //new array to store results based on search criteria\n    if(props.places){\n     console.log(\"here####\")\n        // props.places.map((place,i)=>\n        //     {\n        //     console.log({ lat: place.geometry.location.lat(), lng: place.geometry.location.lng()})\n            \n            \n        //     if(google.maps.geometry.spherical.computeDistanceBetween(target,new google.maps.LatLng(place.geometry.location.lat(),place.geometry.location.lng()))<props.radius){\n                \n        //         option.push(place);\n        //     }\n        //     if(place.price_level<=props.price){\n        //         option.push(place)\n\n        //     }\n        //     console.log('stuck here')\n        //     if(place.types.length !== 0 && place.types.includes(props.searchCriteria)){\n        //         console.log(\"here \"+props.searchCriteria)\n        //         option.push(place)\n\n        //     }\n\n\n        // }\n        // )\n    }\n    \n    // var places_index;\n    // for(places_index=0;places_index<props.places.length;places_index++){\n    //     var results=props.places[places_index]\n    //     console.log(results)\n    // }\n\n\n\n\n    console.log(option);\n\n    // if(navigator.geolocation){\n    //     navigator.geolocation.getCurrentPosition(\n    //         position=>{\n    //                 props.currentLatLng.lat=position.coords.latitude\n    //                 props.currentLatLng.lng=position.coords.longitude\n    //             })\n             \n    //         }\n        //console.log(props.currLat);\n    return (\n      \n        <GoogleMap\n            onTilesLoaded={props.fetchPlaces}\n            ref={props.onMapMounted}\n            onClick={props.fetchPlaces}\n            defaultZoom={10}\n            defaultCenter={{lat:47.6769683,lng:-122.0284808}}\n        >\n            {option && option.map((place, i) =>                \n                <Marker key={i} position={{ lat: place.geometry.location.lat(), lng: place.geometry.location.lng() }} \n                onClick ={()=> {props.onToggleOpen(i)}} >\n                {props.isOpen && props.markerIndex=== i &&\n                <InfoWindow onCloseClick={props.onToggleOpen}>\n                    <div>{place.name}</div>\n                </InfoWindow>\n                }\n                </Marker>\n                \n            )}\n\n        </GoogleMap>\n     \n    )\n   \n})\n\nexport default class MealMap extends React.Component {\n\n    \n    render() {\n\n        var searchCriteria=this.props.search;\n        var radius=this.props.radius;\n        var price=this.props.price;\n        var ratings=this.props.reviews;\n        var types=[]\n  \n        if(searchCriteria.length !== 0 || radius!== 0 || price !==0){\n            console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n        // searchCriteria.map(select=> {\n        //     console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n        //     return(\n        //       searchCriteria=select.label\n        //     )\n        //   })\n\n        searchCriteria.map(select=>{\n            types.push(select.label)\n        })\n\n      return (\n            <MyMapComponent searchCriteria={types}\n                price={price*1}\n                review={ratings}\n                radius={radius*1609} //converting into meters\n            />\n        )\n          }\n        // }else{\n        //     console.log(searchCriteria+\" \"+ radius +\" \" +price+\" \"+ratings)\n        return ( //to prevent from crashing\n            <MyMapComponent searchCriteria='' \n                price=\"any\"\n                review=\"any\"\n                radius='0'\n            />\n        )\n        // }\n       \n    }\n\n}"]},"metadata":{},"sourceType":"module"}