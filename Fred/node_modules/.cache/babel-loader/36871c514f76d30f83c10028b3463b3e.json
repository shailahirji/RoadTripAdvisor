{"ast":null,"code":"/**\n * @hidden\n * Dispatches a new event based on an already internally dispatched event to the consumers of our React components.\n *\n * @param eventHandler - The public event handler assigned by the consumer of the React component.\n * When undefined, the method is no-op.\n * @param dispatchedEvent - The already internally dispatched event.\n * @param target - The target component of the new event.\n * @param eventData - The additional data to be passed via the new event. When the new event has no additional data\n *  except the args of the `BaseEvent`, `undefined` should be passed.\n */\nexport default function dispatchEvent(eventHandler, dispatchedEvent, target, // TODO: Uncomment after switching to TS 3.\n// eventData: Exclude<keyof E, keyof BaseEvent<React.Component>> extends never ?\n//     undefined : Pick<E, Exclude<keyof E, keyof BaseEvent<React.Component>>>\neventData) {\n  if (eventHandler) {\n    var eventBaseData = {\n      syntheticEvent: dispatchedEvent,\n      nativeEvent: dispatchedEvent.nativeEvent,\n      target: target\n    };\n    eventHandler.call(undefined, Object.assign(eventBaseData, eventData));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}