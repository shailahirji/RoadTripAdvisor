{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/src/components/LocationSearchInput.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nvar LocationSearchInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LocationSearchInput, _React$Component);\n\n  function LocationSearchInput(props) {\n    _classCallCheck(this, LocationSearchInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LocationSearchInput).call(this, props));\n  }\n\n  _createClass(LocationSearchInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PlacesAutocomplete, {\n        value: this.props.locations,\n        onChange: this.props.handleLocation,\n        onSelect: this.props.handleSelect,\n        wrapperStyle: {\n          position: 'relative',\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            suggestions = _ref.suggestions,\n            getSuggestionItemProps = _ref.getSuggestionItemProps,\n            loading = _ref.loading;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"input\", Object.assign({}, getInputProps({\n          placeholder: 'Enter a location',\n          className: 'location-search-input'\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, loading && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n          var style = suggestion.active ? {\n            backgroundColor: '#fafafa',\n            cursor: 'pointer'\n          } : {\n            backgroundColor: '#ffffff',\n            cursor: 'pointer'\n          };\n          return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n            className: className,\n            style: style\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, suggestion.description));\n        })));\n      }) //   </div>\n      //   <button>Search</button>\n      // </div>\n      ;\n    }\n  }]);\n\n  return LocationSearchInput;\n}(React.Component);\n\nexport default LocationSearchInput;","map":{"version":3,"sources":["/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/src/components/LocationSearchInput.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","LocationSearchInput","props","locations","handleLocation","handleSelect","position","display","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;;IAKMC,mB;;;;;AACJ,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA,4FACXA,KADW;AAElB;;;;6BAGQ;AACP,aAEM,oBAAC,kBAAD;AACE,QAAA,KAAK,EAAE,KAAKA,KAAL,CAAWC,SADpB;AAEE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,cAFvB;AAGE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,YAHvB;AAIE,QAAA,YAAY,EAAE;AAAEC,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,OAAO,EAAE;AAAjC,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG;AAAA,YAAGC,aAAH,QAAGA,aAAH;AAAA,YAAkBC,WAAlB,QAAkBA,WAAlB;AAAA,YAA+BC,sBAA/B,QAA+BA,sBAA/B;AAAA,YAAuDC,OAAvD,QAAuDA,OAAvD;AAAA,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,+CACMH,aAAa,CAAC;AAChBI,UAAAA,WAAW,EAAE,kBADG;AAEhBC,UAAAA,SAAS,EAAE;AAFK,SAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EASE;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGF,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADd,EAEGF,WAAW,CAACK,GAAZ,CAAgB,UAAAC,UAAU,EAAI;AAC7B,cAAMF,SAAS,GAAGE,UAAU,CAACC,MAAX,GACd,yBADc,GAEd,iBAFJ,CAD6B,CAI7B;;AACA,cAAMC,KAAK,GAAGF,UAAU,CAACC,MAAX,GACV;AAAEE,YAAAA,eAAe,EAAE,SAAnB;AAA8BC,YAAAA,MAAM,EAAE;AAAtC,WADU,GAEV;AAAED,YAAAA,eAAe,EAAE,SAAnB;AAA8BC,YAAAA,MAAM,EAAE;AAAtC,WAFJ;AAGA,iBACE,6CACMT,sBAAsB,CAACK,UAAD,EAAa;AACrCF,YAAAA,SAAS,EAATA,SADqC;AAErCI,YAAAA,KAAK,EAALA;AAFqC,WAAb,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOF,UAAU,CAACK,WAAlB,CANF,CADF;AAUD,SAlBA,CAFH,CATF,CADD;AAAA,OANH,CAFN,CA2CE;AAGA;AAEA;AAhDF;AAoDD;;;;EA3D+BvB,KAAK,CAACwB,S;;AA8DxC,eAAepB,mBAAf","sourcesContent":["import React from 'react';\n\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n    return (\n    \n          <PlacesAutocomplete\n            value={this.props.locations}\n            onChange={this.props.handleLocation}\n            onSelect={this.props.handleSelect}\n            wrapperStyle={{ position: 'relative', display: 'inline-block' }}\n          >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n              <div>\n                <input\n                  {...getInputProps({\n                    placeholder: 'Enter a location',\n                    className: 'location-search-input',\n                  })}\n\n                />\n\n                <div className=\"autocomplete-dropdown-container\">\n                  {loading && <div>Loading...</div>}\n                  {suggestions.map(suggestion => {\n                    const className = suggestion.active\n                      ? 'suggestion-item--active'\n                      : 'suggestion-item';\n                    // inline style for demonstration purpose\n                    const style = suggestion.active\n                      ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                      : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                    return (\n                      <div\n                        {...getSuggestionItemProps(suggestion, {\n                          className,\n                          style,\n                        })}\n                      >\n                        <span>{suggestion.description}</span>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </PlacesAutocomplete>\n      //   </div>\n\n        \n      //   <button>Search</button>\n\n      // </div>\n\n\n    );\n  }\n}\n\nexport default LocationSearchInput;"]},"metadata":{},"sourceType":"module"}