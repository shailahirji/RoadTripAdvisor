{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar $ = _interopDefault(require('jquery'));\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nrequire('bootstrap-daterangepicker');\n/* generated by gulpfile.js */\n\n\nvar getOptions = function getOptions() {\n  return ['<input>', 'alwaysShowCalendars', 'applyClass', 'autoApply', 'autoUpdateInput', 'buttonClasses', 'cancelClass', 'dateLimit', 'drops', 'endDate', 'isCustomDate', 'isInvalidDate', 'linkedCalendars', 'locale', 'maxDate', 'minDate', 'opens', 'parentEl', 'ranges', 'showCustomRangeLabel', 'showDropdowns', 'showISOWeekNumbers', 'showWeekNumbers', 'singleDatePicker', 'startDate', 'template', 'timePicker', 'timePicker24Hour', 'timePickerIncrement', 'timePickerSeconds'];\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar DateRangePicker = function (_Component) {\n  inherits(DateRangePicker, _Component);\n\n  function DateRangePicker(props) {\n    classCallCheck(this, DateRangePicker);\n\n    var _this = possibleConstructorReturn(this, (DateRangePicker.__proto__ || Object.getPrototypeOf(DateRangePicker)).call(this, props));\n\n    _this.$picker = null;\n    _this.options = getOptions();\n    return _this;\n  }\n\n  createClass(DateRangePicker, [{\n    key: 'makeEventHandler',\n    value: function makeEventHandler(eventType) {\n      var _this2 = this;\n\n      var onEvent = this.props.onEvent;\n      return function (event, picker) {\n        if (typeof onEvent === 'function') {\n          onEvent(event, picker);\n        }\n\n        if (typeof _this2.props[eventType] === 'function') {\n          _this2.props[eventType](event, picker);\n        }\n      };\n    }\n  }, {\n    key: 'getOptionsFromProps',\n    value: function getOptionsFromProps(props) {\n      var options;\n      props = props || this.props;\n      this.options.forEach(function (option) {\n        if (props.hasOwnProperty(option)) {\n          options = options || {};\n          options[option] = props[option];\n        }\n      });\n      return options || {};\n    }\n  }, {\n    key: 'setOptionsFromProps',\n    value: function setOptionsFromProps(currentOptions) {\n      var _this3 = this;\n\n      var keys = Object.keys(currentOptions);\n\n      if (this.$picker) {\n        if (currentOptions) {\n          keys.forEach(function (key) {\n            if (key === 'startDate') {\n              _this3.$picker.data('daterangepicker').setStartDate(currentOptions[key]);\n            } else if (key === 'endDate') {\n              _this3.$picker.data('daterangepicker').setEndDate(currentOptions[key]);\n            } else if (key === 'locale') {\n              $.extend(_this3.$picker.data('daterangepicker')[key], currentOptions[key]);\n            } else {\n              _this3.$picker.data('daterangepicker')[key] = currentOptions[key];\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.$picker) {\n        var currentOptions = this.getOptionsFromProps();\n        var nextOptions = this.getOptionsFromProps(nextProps);\n        var changedOptions = {};\n        this.options.forEach(function (option) {\n          if (currentOptions[option] !== nextOptions[option]) {\n            changedOptions[option] = nextOptions[option];\n          }\n        });\n        this.setOptionsFromProps(changedOptions);\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initializeDateRangePicker();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.removeDateRangePicker();\n    }\n  }, {\n    key: 'removeDateRangePicker',\n    value: function removeDateRangePicker() {\n      if (this.$picker && this.$picker.data('daterangepicker')) {\n        this.$picker.data('daterangepicker').remove();\n      }\n    }\n  }, {\n    key: 'initializeDateRangePicker',\n    value: function initializeDateRangePicker() {\n      var _this4 = this; // initialize\n\n\n      this.$picker.daterangepicker(this.getOptionsFromProps()); // attach event listeners\n\n      ['Show', 'Hide', 'ShowCalendar', 'HideCalendar', 'Apply', 'Cancel'].forEach(function (event) {\n        var lcase = event.toLowerCase();\n\n        _this4.$picker.on(lcase + '.daterangepicker', _this4.makeEventHandler('on' + event));\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          containerStyles = _props.containerStyles,\n          containerClass = _props.containerClass;\n      return React__default.createElement('div', {\n        ref: function ref(picker) {\n          _this5.$picker = $(picker);\n        },\n        className: containerClass,\n        style: containerStyles\n      }, children);\n    }\n  }]);\n  return DateRangePicker;\n}(React.Component);\n\nDateRangePicker.defaultProps = {\n  containerClass: 'react-bootstrap-daterangepicker-container',\n  containerStyles: {\n    display: 'inline-block'\n  }\n};\nDateRangePicker.propTypes = {\n  '<input>': PropTypes.any,\n  alwaysShowCalendars: PropTypes.bool,\n  applyClass: PropTypes.string,\n  autoApply: PropTypes.bool,\n  autoUpdateInput: PropTypes.bool,\n  buttonClasses: PropTypes.array,\n  cancelClass: PropTypes.string,\n  containerClass: PropTypes.string,\n  containerStyles: PropTypes.object,\n  dateLimit: PropTypes.object,\n  drops: PropTypes.oneOf(['down', 'up']),\n  endDate: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  isCustomDate: PropTypes.func,\n  isInvalidDate: PropTypes.func,\n  linkedCalendars: PropTypes.bool,\n  locale: PropTypes.object,\n  maxDate: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  minDate: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  onApply: PropTypes.func,\n  onCancel: PropTypes.func,\n  onEvent: PropTypes.func,\n  onHide: PropTypes.func,\n  onHideCalendar: PropTypes.func,\n  onShow: PropTypes.func,\n  onShowCalendar: PropTypes.func,\n  opens: PropTypes.oneOf(['left', 'right', 'center']),\n  parentEl: PropTypes.any,\n  ranges: PropTypes.object,\n  showCustomRangeLabel: PropTypes.bool,\n  showDropdowns: PropTypes.bool,\n  showISOWeekNumbers: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  singleDatePicker: PropTypes.bool,\n  startDate: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  template: PropTypes.any,\n  timePicker: PropTypes.bool,\n  timePickerIncrement: PropTypes.number,\n  timePicker24Hour: PropTypes.bool,\n  timePickerSeconds: PropTypes.bool\n};\nexports.DateRangePicker = DateRangePicker;\nexports.default = DateRangePicker;","map":null,"metadata":{},"sourceType":"script"}