{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/src/components/MealPreferences.js\";\nimport React, { Component } from \"react\"; // import {Container, Col, Row,Button} from 'reactstrap'\n\nimport { Container } from \"reactstrap\";\nimport { Stitch, AnonymousCredential, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport \"./App.css\";\nimport MealMap from \"./MealMap.js\";\nimport MealCard from \"./MealCard.js\";\nimport Card from \"./Card.js\";\nimport Itinerary from \"./Itinerary\";\nimport { delay } from \"q\";\n\nvar MealPreferences =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MealPreferences, _React$Component);\n\n  function MealPreferences(props) {\n    var _this;\n\n    _classCallCheck(this, MealPreferences);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MealPreferences).call(this, props)); // this.displayCard = this.displayCard.bind(this);\n\n    _this.selectedKeywords = function (selection) {\n      _this.setState({\n        selected: selection\n      });\n    };\n\n    _this.selectPrice = function (price) {\n      _this.setState({\n        price_range: price\n      });\n    };\n\n    _this.selectedDistance = function (distance) {\n      _this.setState({\n        distance: distance\n      });\n    };\n\n    _this.selectedRatings = function (rate) {\n      _this.setState({\n        ratings: rate\n      });\n    };\n\n    _this.displayedResults = function (results) {\n      _this.setState({\n        search_results: results\n      });\n    };\n\n    _this.state = {\n      selected: [],\n      count: 0,\n      price_range: \"any\",\n      //any price range\n      distance: \"any\",\n      ratings: \"any\",\n      search_result: [],\n      itinerary: []\n    };\n    _this.card = null;\n    _this.onMouseClickAdd = _this.onMouseClickAdd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.displayOnLoad = _this.displayOnLoad.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.test = _this.test.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MealPreferences, [{\n    key: \"onMouseClickAdd\",\n    value: function onMouseClickAdd(lat, lng, name) {\n      var newItinerary = this.state.itinerary;\n      newItinerary.push({\n        event: name,\n        pos: {\n          lat: lat,\n          lng: lng\n        }\n      });\n      this.setState({\n        itinerary: newItinerary\n      });\n\n      for (var i = 0; i < this.state.itinerary.length; i++) {\n        console.log(this.state.itinerary[i].pos.lat);\n        console.log(this.state.itinerary[i].pos.lng);\n        console.log(this.state.itinerary[i].event);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Initialize the App Client\n      this.client = Stitch.initializeDefaultAppClient(\"road-trip-advisor-iiwad\"); // Get a MongoDB Service Client\n      // This is used for logging in and communicating with Stitch\n\n      var mongodb = this.client.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\"); // Get a reference to the todo database\n\n      this.db = mongodb.db(\"RoadTripAdvisor\");\n      this.displayOnLoad();\n      this.test();\n    }\n  }, {\n    key: \"test\",\n    value: function test() {\n      //add the current trip \n      var locations = this.props.location.state;\n      this.db.collection(\"trip\").insertOne({\n        owner_id: this.client.auth.user.id,\n        trip: [{\n          start: locations.from\n        }, {\n          end: locations.to\n        }]\n      }).then(console.log(\"succuessful!\")).catch(console.error);\n    }\n  }, {\n    key: \"displayOnLoad\",\n    value: function displayOnLoad() {\n      this.client.auth.loginWithCredential(new AnonymousCredential()).then(\"successfully connected!\").catch(console.error);\n    } // displayCard(card) {\n    //   if (card === \"travelers\") {\n    //     console.log(card);\n    //     return <Card />;\n    //   }\n    // }\n    //get data back from child\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(MealCard, {\n        color: \"#ffc107\",\n        getKeywordList: this.selectedKeywords,\n        getPrice: this.selectPrice,\n        getRadius: this.selectedDistance,\n        getRatings: this.selectedRatings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(MealMap, {\n        search: this.state.selected,\n        price: this.state.price_range,\n        reviews: this.state.ratings,\n        radius: this.state.distance,\n        locations: this.props.location.state,\n        handleClick: this.onMouseClickAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Itinerary, {\n        events: this.state.itinerary,\n        locations: this.props.location.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MealPreferences;\n}(React.Component);\n\nexport default MealPreferences;","map":{"version":3,"sources":["/Users/shaila/Documents/GitHub/RoadTripAdvisor/Shaila/RTA-landing-meal/src/components/MealPreferences.js"],"names":["React","Component","Container","Stitch","AnonymousCredential","RemoteMongoClient","MealMap","MealCard","Card","Itinerary","delay","MealPreferences","props","selectedKeywords","selection","setState","selected","selectPrice","price","price_range","selectedDistance","distance","selectedRatings","rate","ratings","displayedResults","results","search_results","state","count","search_result","itinerary","card","onMouseClickAdd","bind","displayOnLoad","test","lat","lng","name","newItinerary","push","event","pos","i","length","console","log","client","initializeDefaultAppClient","mongodb","getServiceClient","factory","db","locations","location","collection","insertOne","owner_id","auth","user","id","trip","start","from","end","to","then","catch","error","loginWithCredential"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import {Container, Col, Row,Button} from 'reactstrap'\nimport { Container } from \"reactstrap\";\nimport {Stitch,AnonymousCredential,RemoteMongoClient} from \"mongodb-stitch-browser-sdk\";\nimport \"./App.css\";\nimport MealMap from \"./MealMap.js\";\nimport MealCard from \"./MealCard.js\";\nimport Card from \"./Card.js\";\nimport Itinerary from \"./Itinerary\";\nimport { delay } from \"q\";\n\nclass MealPreferences extends React.Component {\n  constructor(props) {\n    super(props);\n   // this.displayCard = this.displayCard.bind(this);\n    this.state = {\n      selected: [],\n      count: 0,\n      price_range: \"any\", //any price range\n      distance: \"any\",\n      ratings: \"any\",\n      search_result: [],\n      itinerary: []\n    };\n    this.card = null;\n    this.onMouseClickAdd = this.onMouseClickAdd.bind(this);\n    this.displayOnLoad = this.displayOnLoad.bind(this);\n    this.test = this.test.bind(this);\n\n  }\n\n  onMouseClickAdd(lat, lng, name) {\n    var newItinerary = this.state.itinerary;\n    newItinerary.push({ event: name, pos: { lat: lat, lng: lng } });\n    this.setState({\n      itinerary: newItinerary\n    });\n    for (var i = 0; i < this.state.itinerary.length; i++) {\n      console.log(this.state.itinerary[i].pos.lat);\n      console.log(this.state.itinerary[i].pos.lng);\n      console.log(this.state.itinerary[i].event);\n    }\n  }\n  componentDidMount() {\n    // Initialize the App Client\n    this.client = Stitch.initializeDefaultAppClient(\"road-trip-advisor-iiwad\");\n    // Get a MongoDB Service Client\n    // This is used for logging in and communicating with Stitch\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\"mongodb-atlas\"\n    );\n    // Get a reference to the todo database\n    this.db = mongodb.db(\"RoadTripAdvisor\");\n    this.displayOnLoad();\n    this.test();\n\n  }\n\n  test(){\n     //add the current trip \n     const locations=this.props.location.state;\n     this.db\n       .collection(\"trip\")\n       .insertOne({\n         owner_id: this.client.auth.user.id,\n         trip: [{start:locations.from},{end:locations.to}]\n       })\n       .then(console.log(\"succuessful!\"))\n       .catch(console.error);\n  }\n  displayOnLoad(){\n    this.client.auth.loginWithCredential(new AnonymousCredential()).then(\"successfully connected!\").catch(console.error);\n  }\n\n  // displayCard(card) {\n  //   if (card === \"travelers\") {\n  //     console.log(card);\n  //     return <Card />;\n  //   }\n  // }\n\n  //get data back from child\n  selectedKeywords = selection => {\n    this.setState({\n      selected: selection\n    });\n  };\n\n  selectPrice = price => {\n    this.setState({\n      price_range: price\n    });\n  };\n\n  selectedDistance = distance => {\n    this.setState({\n      distance: distance\n    });\n  };\n\n  selectedRatings = rate => {\n    this.setState({\n      ratings: rate\n    });\n  };\n\n  displayedResults = results => {\n    this.setState({\n      search_results: results\n    });\n  };\n\n  render() {\n\n    return (\n      <Container>\n        {/* <div>\n          <Button style={buttonStyle} >Meal</Button>\n          <Button style={buttonStyle} onClick={this.displayCard('travelers') } >Travelers</Button>\n         </div> */}\n        <MealCard\n          color=\"#ffc107\"\n          getKeywordList={this.selectedKeywords}\n          getPrice={this.selectPrice}\n          getRadius={this.selectedDistance}\n          getRatings={this.selectedRatings}\n        />\n        <MealMap\n          search={this.state.selected}\n          price={this.state.price_range}\n          reviews={this.state.ratings}\n          radius={this.state.distance}\n          locations={this.props.location.state}\n          handleClick={this.onMouseClickAdd}\n        />\n        <Itinerary  events={this.state.itinerary} locations={this.props.location.state} />\n      </Container>\n    );\n  }\n}\n\nexport default MealPreferences;\n"]},"metadata":{},"sourceType":"module"}