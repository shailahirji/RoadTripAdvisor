{"ast":null,"code":"import _classCallCheck from \"/Volumes/HD/RoadTripAdvisor/Fred/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/HD/RoadTripAdvisor/Fred/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/HD/RoadTripAdvisor/Fred/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/HD/RoadTripAdvisor/Fred/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/HD/RoadTripAdvisor/Fred/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Volumes/HD/RoadTripAdvisor/Fred/RTA-landing-meal/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Volumes/HD/RoadTripAdvisor/Fred/RTA-landing-meal/src/components/MealPreferences.js\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\"; // import {Container, Col, Row,Button} from 'reactstrap'\n\nimport { Container } from \"reactstrap\";\nimport { Stitch, AnonymousCredential, RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport \"./App.css\";\nimport MealMap from \"./MealMap.js\";\nimport MealCard from \"./MealCard.js\";\nimport Card from \"./Card.js\";\nimport Itinerary from \"./Itinerary\";\n\nvar MealPreferences =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MealPreferences, _React$Component);\n\n  function MealPreferences(props) {\n    var _this;\n\n    _classCallCheck(this, MealPreferences);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MealPreferences).call(this, props));\n\n    _this.selectedKeywords = function (selection) {\n      _this.setState({\n        selected: selection\n      });\n    };\n\n    _this.selectPrice = function (price) {\n      _this.setState({\n        price_range: price\n      });\n    };\n\n    _this.selectedDistance = function (distance) {\n      _this.setState({\n        distance: distance\n      });\n    };\n\n    _this.selectedRatings = function (rate) {\n      _this.setState({\n        ratings: rate\n      });\n    };\n\n    _this.displayedResults = function (results) {\n      _this.setState({\n        search_results: results\n      });\n    };\n\n    _this.selectSavedTrip = function (selectedTrip) {\n      _this.setState({\n        selectedTrip: selectedTrip\n      });\n    };\n\n    _this.state = {\n      selected: [],\n      count: 0,\n      price_range: \"any\",\n      //any price range\n      distance: \"any\",\n      ratings: \"any\",\n      search_result: [],\n      itinerary: [],\n      userID: \"\",\n      addToDB: false,\n      tripNames: [],\n      savedTrips: [],\n      selectedTrip: \"\"\n    };\n    _this.card = null;\n    _this.onMouseClickAdd = _this.onMouseClickAdd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addTrip = _this.addTrip.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeEvent = _this.removeEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadSavedTrips = _this.loadSavedTrips.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MealPreferences, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //intilize the app client\n      this.client = Stitch.initializeDefaultAppClient(\"rta-rgwjk\"); //get a mongodb service client\n      //this is used for logging in and communitction with stitch\n\n      var mongodb = this.client.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\"); //get reference to the todos database\n\n      this.db = mongodb.db(\"RTA\");\n      this.displayOnLoad(); //Load saved trips into savedTrips array\n\n      this.loadSavedTrips();\n    }\n  }, {\n    key: \"displayOnLoad\",\n    value: function displayOnLoad() {\n      //Anonymously log in and display cmments on load\n      this.client.auth.loginWithCredential(new AnonymousCredential()).then(console.log(\"success!\")).catch(console.error);\n    }\n  }, {\n    key: \"addTrip\",\n    value: function addTrip() {\n      var locations = this.props.location.state; //insert the todo into the remote stitch db\n      //then re query the db and display the new todos\n      // this.db.collection(\"trip\").insertOne({\"ownder_id\":this.client.auth.user.id,\"tripname\":locations.from+\"-\"+locations.to,\n      //                                                   \"trip\":[{\"start\":locations.from},{\"end\":locations.to}],\"waypoints\":this.state.itinerary})\n      //                                                   .then(console.log(\"success\")).catch(console.error);\n\n      try {\n        this.db.collection(\"trip\").updateOne({\n          tripname: locations.from + \"-\" + locations.to\n        }, {\n          $set: {\n            waypoints: this.state.itinerary,\n            from: locations.from,\n            to: locations.to\n          }\n        }, {\n          upsert: true\n        });\n      } catch (e) {\n        console.log(e);\n      } // Load saved trips into savedTrips array\n\n\n      this.loadSavedTrips();\n    } // Load saved trips into savedTrips array and trip names into tripNames array\n\n  }, {\n    key: \"loadSavedTrips\",\n    value: function loadSavedTrips() {\n      var _this2 = this;\n\n      this.db.collection(\"trip\").find({}, {\n        tripname: 1,\n        _id: 0\n      }).toArray().then(function (savedTrips) {\n        _this2.setState({\n          savedTrips: savedTrips\n        });\n      });\n    }\n  }, {\n    key: \"onMouseClickAdd\",\n    value: function onMouseClickAdd(lat, lng, name) {\n      this.addToDB = true;\n      var newItinerary = this.state.itinerary;\n      newItinerary.push({\n        event: name,\n        pos: {\n          lat: lat,\n          lng: lng\n        }\n      });\n      this.setState({\n        itinerary: newItinerary\n      });\n\n      for (var i = 0; i < this.state.itinerary.length; i++) {\n        console.log(this.state.itinerary[i].pos.lat);\n        console.log(this.state.itinerary[i].pos.lng);\n        console.log(this.state.itinerary[i].event);\n      }\n    }\n  }, {\n    key: \"removeEvent\",\n    value: function removeEvent(name) {\n      var newItinerary = this.state.itinerary;\n      console.log(name);\n\n      for (var k = 0; k < newItinerary.length; k++) {\n        console.log(newItinerary[k].event);\n\n        if (newItinerary[k].event === name) {\n          console.log(\"grapes\");\n          newItinerary.splice(newItinerary.indexOf(name), 1);\n        }\n      }\n\n      this.setState({\n        itinerary: newItinerary\n      });\n\n      for (var i = 0; i < this.state.itinerary.length; i++) {\n        console.log(this.state.itinerary[i].pos.lat);\n        console.log(this.state.itinerary[i].pos.lng);\n        console.log(this.state.itinerary[i].event);\n      } //array.splice(array.indexOf(key),1);\n      // console.log(\"hi\")\n\n    } //get data back from child\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var selectStyle = {\n        position: \"fixed\",\n        top: 700,\n        left: 200\n      };\n      var buttonStyle = {\n        position: \"fixed\",\n        top: 600,\n        left: 200\n      };\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(MealCard, {\n        color: \"#ffc107\",\n        getKeywordList: this.selectedKeywords,\n        getPrice: this.selectPrice,\n        getRadius: this.selectedDistance,\n        getRatings: this.selectedRatings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(MealMap, {\n        search: this.state.selected,\n        price: this.state.price_range,\n        reviews: this.state.ratings,\n        radius: this.state.distance,\n        locations: this.props.location.state,\n        handleClick: this.onMouseClickAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Itinerary, {\n        events: this.state.itinerary,\n        locations: this.props.location.state,\n        handleClick: this.removeEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        style: buttonStyle,\n        class: \"btn btn-warning pl-5 pr-5\",\n        disabled: !this.addToDB,\n        onClick: this.addTrip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Save Trip\"), React.createElement(\"form\", {\n        style: selectStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onChange: selectSavedTrip(val),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"/* pass OnChange to handle changes in the form */\", this.state.savedTrips.map(function (trip) {\n        return React.createElement(\"option\", {\n          value: trip.tripname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, trip.tripname);\n      })), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-warning pl-5 pr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Load\")));\n    }\n  }]);\n\n  return MealPreferences;\n}(React.Component);\n\nexport default MealPreferences;","map":{"version":3,"sources":["/Volumes/HD/RoadTripAdvisor/Fred/RTA-landing-meal/src/components/MealPreferences.js"],"names":["React","Component","Select","Container","Stitch","AnonymousCredential","RemoteMongoClient","MealMap","MealCard","Card","Itinerary","MealPreferences","props","selectedKeywords","selection","setState","selected","selectPrice","price","price_range","selectedDistance","distance","selectedRatings","rate","ratings","displayedResults","results","search_results","selectSavedTrip","selectedTrip","state","count","search_result","itinerary","userID","addToDB","tripNames","savedTrips","card","onMouseClickAdd","bind","addTrip","removeEvent","loadSavedTrips","client","initializeDefaultAppClient","mongodb","getServiceClient","factory","db","displayOnLoad","auth","loginWithCredential","then","console","log","catch","error","locations","location","collection","updateOne","tripname","from","to","$set","waypoints","upsert","e","find","_id","toArray","lat","lng","name","newItinerary","push","event","pos","i","length","k","splice","indexOf","selectStyle","position","top","left","buttonStyle","val","map","trip"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Select from \"react-select\";\n// import {Container, Col, Row,Button} from 'reactstrap'\nimport { Container } from \"reactstrap\";\nimport {\n  Stitch,\n  AnonymousCredential,\n  RemoteMongoClient\n} from \"mongodb-stitch-browser-sdk\";\nimport \"./App.css\";\nimport MealMap from \"./MealMap.js\";\nimport MealCard from \"./MealCard.js\";\nimport Card from \"./Card.js\";\nimport Itinerary from \"./Itinerary\";\n\nclass MealPreferences extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: [],\n      count: 0,\n      price_range: \"any\", //any price range\n      distance: \"any\",\n      ratings: \"any\",\n      search_result: [],\n      itinerary: [],\n      userID: \"\",\n      addToDB: false,\n      tripNames: [],\n      savedTrips: [],\n      selectedTrip: \"\"\n    };\n    this.card = null;\n    this.onMouseClickAdd = this.onMouseClickAdd.bind(this);\n    this.addTrip = this.addTrip.bind(this);\n    this.removeEvent = this.removeEvent.bind(this);\n    this.loadSavedTrips = this.loadSavedTrips.bind(this);\n  }\n\n  componentDidMount() {\n    //intilize the app client\n    this.client = Stitch.initializeDefaultAppClient(\"rta-rgwjk\");\n    //get a mongodb service client\n    //this is used for logging in and communitction with stitch\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n\n    //get reference to the todos database\n    this.db = mongodb.db(\"RTA\");\n    this.displayOnLoad();\n\n    //Load saved trips into savedTrips array\n    this.loadSavedTrips();\n  }\n\n  displayOnLoad() {\n    //Anonymously log in and display cmments on load\n    this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(console.log(\"success!\"))\n      .catch(console.error);\n  }\n\n  addTrip() {\n    const locations = this.props.location.state;\n    //insert the todo into the remote stitch db\n    //then re query the db and display the new todos\n    // this.db.collection(\"trip\").insertOne({\"ownder_id\":this.client.auth.user.id,\"tripname\":locations.from+\"-\"+locations.to,\n    //                                                   \"trip\":[{\"start\":locations.from},{\"end\":locations.to}],\"waypoints\":this.state.itinerary})\n    //                                                   .then(console.log(\"success\")).catch(console.error);\n    try {\n      this.db.collection(\"trip\").updateOne(\n        { tripname: locations.from + \"-\" + locations.to },\n        {\n          $set: {\n            waypoints: this.state.itinerary,\n            from: locations.from,\n            to: locations.to\n          }\n        },\n        { upsert: true }\n      );\n    } catch (e) {\n      console.log(e);\n    }\n\n    // Load saved trips into savedTrips array\n    this.loadSavedTrips();\n  }\n\n  // Load saved trips into savedTrips array and trip names into tripNames array\n  loadSavedTrips() {\n    this.db\n      .collection(\"trip\")\n      .find({}, { tripname: 1, _id: 0 })\n      .toArray()\n      .then(savedTrips => {\n        this.setState({ savedTrips });\n      });\n  }\n\n  onMouseClickAdd(lat, lng, name) {\n    this.addToDB = true;\n    var newItinerary = this.state.itinerary;\n    newItinerary.push({ event: name, pos: { lat: lat, lng: lng } });\n    this.setState({\n      itinerary: newItinerary\n    });\n    for (var i = 0; i < this.state.itinerary.length; i++) {\n      console.log(this.state.itinerary[i].pos.lat);\n      console.log(this.state.itinerary[i].pos.lng);\n      console.log(this.state.itinerary[i].event);\n    }\n  }\n\n  removeEvent(name) {\n    var newItinerary = this.state.itinerary;\n    console.log(name);\n    for (var k = 0; k < newItinerary.length; k++) {\n      console.log(newItinerary[k].event);\n      if (newItinerary[k].event === name) {\n        console.log(\"grapes\");\n        newItinerary.splice(newItinerary.indexOf(name), 1);\n      }\n    }\n    this.setState({\n      itinerary: newItinerary\n    });\n    for (var i = 0; i < this.state.itinerary.length; i++) {\n      console.log(this.state.itinerary[i].pos.lat);\n      console.log(this.state.itinerary[i].pos.lng);\n      console.log(this.state.itinerary[i].event);\n    }\n    //array.splice(array.indexOf(key),1);\n    // console.log(\"hi\")\n  }\n\n  //get data back from child\n  selectedKeywords = selection => {\n    this.setState({\n      selected: selection\n    });\n  };\n\n  selectPrice = price => {\n    this.setState({\n      price_range: price\n    });\n  };\n\n  selectedDistance = distance => {\n    this.setState({\n      distance: distance\n    });\n  };\n\n  selectedRatings = rate => {\n    this.setState({\n      ratings: rate\n    });\n  };\n\n  displayedResults = results => {\n    this.setState({\n      search_results: results\n    });\n  };\n\n  selectSavedTrip = selectedTrip => {\n    this.setState({\n      selectedTrip\n    });\n  };\n\n  render() {\n    var selectStyle = { position: \"fixed\", top: 700, left: 200 };\n    var buttonStyle = { position: \"fixed\", top: 600, left: 200 };\n    return (\n      <Container>\n        {/* <div>\n          <Button style={buttonStyle} >Meal</Button>\n          <Button style={buttonStyle} onClick={this.displayCard('travelers') } >Travelers</Button>\n         </div> */}\n        <MealCard\n          color=\"#ffc107\"\n          getKeywordList={this.selectedKeywords}\n          getPrice={this.selectPrice}\n          getRadius={this.selectedDistance}\n          getRatings={this.selectedRatings}\n        />\n        <MealMap\n          search={this.state.selected}\n          price={this.state.price_range}\n          reviews={this.state.ratings}\n          radius={this.state.distance}\n          locations={this.props.location.state}\n          handleClick={this.onMouseClickAdd}\n        />\n        <Itinerary\n          events={this.state.itinerary}\n          locations={this.props.location.state}\n          handleClick={this.removeEvent}\n        />\n        <button\n          type=\"button\"\n          style={buttonStyle}\n          class=\"btn btn-warning pl-5 pr-5\"\n          disabled={!this.addToDB}\n          onClick={this.addTrip}\n        >\n          Save Trip\n        </button>\n        <form style={selectStyle}>\n          <select onChange={selectSavedTrip(val)}>\n            /* pass OnChange to handle changes in the form */\n            {this.state.savedTrips.map(trip => {\n              return <option value={trip.tripname}>{trip.tripname}</option>;\n            })}\n          </select>\n          <button type=\"button\" class=\"btn btn-warning pl-5 pr-5\">\n            Load\n          </button>\n        </form>\n      </Container>\n    );\n  }\n}\n\nexport default MealPreferences;\n"]},"metadata":{},"sourceType":"module"}