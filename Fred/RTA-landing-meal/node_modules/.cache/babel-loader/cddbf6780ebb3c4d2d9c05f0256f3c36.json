{"ast":null,"code":"import _classCallCheck from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shaila/my-googlemap/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shaila/my-googlemap/src/searchBox.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nexport var SearchBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBox, _React$Component);\n\n  function SearchBox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onPlacesChanged = function () {\n      if (_this.props.onPlacesChanged) {\n        _this.props.onPlacesChanged(_this.searchBox.getPlaces());\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBox, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"input\", Object.assign({\n        ref: \"input\"\n      }, this.props, {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var input = ReactDOM.findDOMNode(this.refs.input);\n      this.searchBox = new this.props.maps.places.SearchBox(input);\n      this.searchBox.addListener('places_changed', this.onPlacesChanged);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // https://developers.google.com/maps/documentation/javascript/events#removing\n      this.props.maps.event.clearInstanceListeners(this.searchBox);\n    }\n  }]);\n\n  return SearchBox;\n}(React.Component);\nSearchBox.propTypes = {\n  placeholder: React.PropTypes.string,\n  onPlacesChanged: React.PropTypes.func\n};\nexport default SearchBox;","map":{"version":3,"sources":["/Users/shaila/my-googlemap/src/searchBox.js"],"names":["React","ReactDOM","SearchBox","onPlacesChanged","props","searchBox","getPlaces","input","findDOMNode","refs","maps","places","addListener","event","clearInstanceListeners","Component","propTypes","placeholder","PropTypes","string","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,WAAaC,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UAQIC,eARJ,GAQsB,YAAM;AACtB,UAAI,MAAKC,KAAL,CAAWD,eAAf,EAAgC;AAC9B,cAAKC,KAAL,CAAWD,eAAX,CAA2B,MAAKE,SAAL,CAAeC,SAAf,EAA3B;AACD;AACF,KAZL;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAKa;AACP,aAAO;AAAO,QAAA,GAAG,EAAC;AAAX,SAAuB,KAAKF,KAA5B;AAAmC,QAAA,IAAI,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;AAPL;AAAA;AAAA,wCAawB;AAClB,UAAIG,KAAK,GAAGN,QAAQ,CAACO,WAAT,CAAqB,KAAKC,IAAL,CAAUF,KAA/B,CAAZ;AACA,WAAKF,SAAL,GAAiB,IAAI,KAAKD,KAAL,CAAWM,IAAX,CAAgBC,MAAhB,CAAuBT,SAA3B,CAAqCK,KAArC,CAAjB;AACA,WAAKF,SAAL,CAAeO,WAAf,CAA2B,gBAA3B,EAA6C,KAAKT,eAAlD;AACD;AAjBL;AAAA;AAAA,2CAkB2B;AACrB;AACA,WAAKC,KAAL,CAAWM,IAAX,CAAgBG,KAAhB,CAAsBC,sBAAtB,CAA6C,KAAKT,SAAlD;AACD;AArBL;;AAAA;AAAA,EAA+BL,KAAK,CAACe,SAArC;AAAab,S,CACFc,S,GAAY;AACjBC,EAAAA,WAAW,EAAEjB,KAAK,CAACkB,SAAN,CAAgBC,MADZ;AAEjBhB,EAAAA,eAAe,EAAEH,KAAK,CAACkB,SAAN,CAAgBE;AAFhB,C;AAuBrB,eAAelB,SAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nexport class SearchBox extends React.Component {\n    static propTypes = {\n      placeholder: React.PropTypes.string,\n      onPlacesChanged: React.PropTypes.func\n    };\n    render() {\n      return <input ref=\"input\" {...this.props} type=\"text\" />;\n    }\n    onPlacesChanged = () => {\n      if (this.props.onPlacesChanged) {\n        this.props.onPlacesChanged(this.searchBox.getPlaces());\n      }\n    };\n    componentDidMount() {\n      var input = ReactDOM.findDOMNode(this.refs.input);\n      this.searchBox = new this.props.maps.places.SearchBox(input);\n      this.searchBox.addListener('places_changed', this.onPlacesChanged);\n    }\n    componentWillUnmount() {\n      // https://developers.google.com/maps/documentation/javascript/events#removing\n      this.props.maps.event.clearInstanceListeners(this.searchBox);\n    }\n  }\n\n  export default SearchBox;\n  "]},"metadata":{},"sourceType":"module"}