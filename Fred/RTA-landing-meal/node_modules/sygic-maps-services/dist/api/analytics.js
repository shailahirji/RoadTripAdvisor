'use strict';

var _validate = require('../util/validate');

var validate = _interopRequireWildcard(_validate);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

exports.mapMatching = {
  url: 'https://analytics.api.sygic.com/v1/api/matching',
  options: {
    method: 'POST'
  },
  validator: validate.construct([validate.mutuallyExclusive(['path', 'coordinates']), validate.object({
    path: validate.optional(validate.string),
    coordinates: validate.optional(validate.stringArrayOf(validate.coordinates(validate.object({
      lat: validate.latitude,
      lng: validate.longitude
    })))),
    accuracies: validate.optional(validate.array(validate.positiveNumber)),
    timestamps: validate.optional(validate.array(validate.positiveNumber)),
    units: validate.optional(validate.oneOf(['metric', 'imperial']))
  })])
};

exports.speedingReport = {
  url: 'https://analytics.api.sygic.com/v0/api/speeding',
  options: {
    method: 'POST'
  },
  validator: validate.object({
    coordinates: validate.stringArrayOf(validate.coordinates(validate.object({
      lat: validate.latitude,
      lng: validate.longitude
    }))),
    accuracies: validate.optional(validate.array(validate.positiveNumber)),
    speeds: validate.optional(validate.array(validate.positiveNumber)),
    timestamps: validate.optional(validate.array(validate.positiveNumber)),
    units: validate.optional(validate.oneOf(['metric', 'imperial']))
  })
};